{"version":3,"sources":["actions/authAction.tsx","api/printDate.ts","Components/CommentBox/index.tsx","api/getGithubComment.ts","api/addGithubComment.ts","Components/Card/index.tsx","api/getGithubInfo.ts","api/getGithubEvent.ts","Components/Nav/index.tsx","Components/Githubook/index.tsx","api/getGithubFollow.ts","config.js","Components/Login/index.tsx","api/githubLogin.ts","Components/Home/index.tsx","App.tsx","serviceWorker.ts","reducers/authReducers.tsx","reducers/errorReducers.tsx","reducers/index.tsx","lib/loggerMiddleware.tsx","store.tsx","index.tsx"],"names":["SET_USER","setCurrentUser","user","type","payload","printDate","s","bar","now","Date","foo","diff","getTime","hourDiff","Math","floor","minDiff","hour","getHours","min","getMinutes","isAm","getFullYear","getMonth","getDate","getDay","String","length","CommentBox","props","useState","info","setInfo","useEffect","comment","idx","className","map","i","key","id","style","width","height","borderRadius","src","avatar_url","backgroundColor","login","source","body","role","getGithubComment","url","token","config","headers","Authorization","axios","get","addGithubComment","commentBody","data","accept","post","Card","auth","useSelector","state","setComment","dateA","e","created_at","dateB","toggleComment","document","getElementById","classList","toggle","handleComment","then","res","comments_url","getGithubCommentURL","console","log","commentForm","autoFocus","resize","placeholder","float","actor","infoBox","href","repo","name","ref","split","commits","c","sha","message","author","onClick","fontSize","onSubmit","preventDefault","target","value","action","issue","escapeHtml","pull_request","getGithubInfo","username","getGithubEvent","Nav","tagName","getElementsByClassName","handleEventType","parentElement","menubox","image","text","imgStyle","avatar","Githubook","sideToggle","setSideToggle","setData","following","setFollowing","events","setEvents","eventType","setEventType","setIdx","eventList","push","getGithubFollowing","Promise","rej","forEach","f","event","el","sort","a","b","v","html_url","md","localStorage","removeItem","li","handleEventList","Login","history","useHistory","dispatch","useDispatch","login_url","code","window","location","search","client_id","client_secret","githubLogin","setItem","access_token","getItem","catch","err","Home","App","basename","process","exact","path","component","Boolean","hostname","match","initialState","rootReducer","combineReducers","errors","loggerMiddleware","store","next","getState","result","middleware","thunk","createStore","compose","applyMiddleware","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.8f8dbf61.chunk.js","sourcesContent":["// set logged in user\r\nexport type AuthTypes = ReturnType<typeof setCurrentUser>;\r\n\r\nexport const SET_USER = \"SET_CURRENT_USER\" as const;\r\n\r\nexport const setCurrentUser = (user: any) => ({\r\n    type: SET_USER,\r\n    payload: user,\r\n});\r\n","const printDate = (s: string) => {\r\n    let now = new Date(),\r\n        foo = new Date(s),\r\n        diff = now.getTime() - foo.getTime(),\r\n        hourDiff = Math.floor(diff / 3600000),\r\n        minDiff = Math.floor((diff % 3600000) / 60000),\r\n        dayli = [\"일요일 \", \"월요일 \", \"화요일 \", \"수요일 \", \"목요일 \", \"금요일 \", \"토요일 \"],\r\n        hour = foo.getHours(),\r\n        min = foo.getMinutes(),\r\n        isAm = true,\r\n        bar = [];\r\n\r\n    if (hour > 12) {\r\n        isAm = false;\r\n        hour -= 12;\r\n    }\r\n\r\n    // [년, 월, 일, 요일, 시간, :, 분]\r\n    bar = [\r\n        foo.getFullYear() + \"년 \",\r\n        foo.getMonth() + 1 + \"월 \",\r\n        foo.getDate() + \"일 \",\r\n        dayli[foo.getDay()],\r\n        isAm ? \"오전 \" : \"오후 \",\r\n        String(hour).length === 1 ? \"0\" + hour : hour,\r\n        \":\",\r\n        min < 10 ? \"0\" + min : min,\r\n    ];\r\n\r\n    return diff > 86400000\r\n        ? [bar]\r\n        : hourDiff > 0\r\n        ? [bar, hourDiff + \"시간 전\"]\r\n        : [bar, minDiff + \"분 전\"];\r\n};\r\n\r\nexport default printDate;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ReactMarkdown from \"react-markdown\";\r\n\r\nconst CommentBox = (props: any) => {\r\n    const [info, setInfo] = useState<any[]>();\r\n\r\n    useEffect(() => {\r\n        if (props.comment[props.idx]) {\r\n            setInfo(props.comment[props.idx]);\r\n        }\r\n    });\r\n\r\n    return (\r\n        <div className=\"my-4\">\r\n            {info ? (\r\n                info.length > 0 ? (\r\n                    info.map((i) => (\r\n                        <div key={i.id} className=\"my-2 d-flex\">\r\n                            <img\r\n                                style={{ width: \"30px\", height: \"30px\", borderRadius: \"50%\" }}\r\n                                src={i.user.avatar_url}\r\n                            />\r\n                            <div\r\n                                className=\"mx-3 p-2\"\r\n                                style={{ borderRadius: \"15px\", backgroundColor: \"#F0F2F5\" }}\r\n                            >\r\n                                <h6>{i.user.login}</h6>\r\n\r\n                                <ReactMarkdown source={i.body} />\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                ) : (\r\n                    <div>댓글이 없습니다</div>\r\n                )\r\n            ) : (\r\n                <div className=\"d-flex justify-content-center\">\r\n                    <div className=\"spinner-border\" role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CommentBox;\r\n","import axios from \"axios\";\r\n\r\nexport const getGithubCommentURL = (url: string, token: string) => {\r\n    const config = {\r\n        headers: {\r\n            Authorization: `token ${token}`,\r\n        },\r\n    };\r\n\r\n    return axios.get(url, config).then((res) => getGithubComment(res.data.comments_url, token));\r\n};\r\n\r\nexport const getGithubComment = (url: any, token: string) => {\r\n    const config = {\r\n        headers: {\r\n            Authorization: `token ${token}`,\r\n        },\r\n    };\r\n    return axios.get<any[]>(url, config);\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport const addGithubComment = (url: any, commentBody: string, token: string) => {\r\n    const data = {\r\n        body: commentBody,\r\n    };\r\n    const config = {\r\n        headers: {\r\n            Authorization: `token ${token}`,\r\n            accept: `application/vnd.github.v3+json`,\r\n        },\r\n    };\r\n\r\n    return axios.post(url, data, config);\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport printDate from \"../../api/printDate\";\r\nimport ReactMarkdown from \"react-markdown/with-html\";\r\nimport { infoBox } from \"../Githubook\";\r\nimport CommentBox from \"../CommentBox\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getGithubCommentURL, getGithubComment } from \"../../api/getGithubComment\";\r\nimport { addGithubComment } from \"../../api/addGithubComment\";\r\n\r\nconst Card = (props: any) => {\r\n    const auth = useSelector((state: any) => state.auth);\r\n    const [comment, setComment] = useState({});\r\n\r\n    let dateA = printDate(props.e.created_at),\r\n        dateB = [dateA[0][1], dateA[0][2], dateA[0][4], dateA[0][5], dateA[0][6], dateA[0][7]];\r\n\r\n    const toggleComment = (idx: string) => {\r\n        let foo = document.getElementById(idx);\r\n        foo?.classList.toggle(\"active\");\r\n    };\r\n\r\n    const handleComment = (url: string, idx: string) => {\r\n        if (props.e.type === \"PushEvent\") {\r\n            getGithubCommentURL(url, auth.user).then((res) => {\r\n                console.log(res);\r\n                setComment({ ...comment, [idx]: [...res.data] });\r\n            });\r\n        } else {\r\n            getGithubComment(url, auth.user).then((res) =>\r\n                setComment({ ...comment, [idx]: [...res.data] })\r\n            );\r\n        }\r\n    };\r\n\r\n    const commentForm = (\r\n        <>\r\n            <img\r\n                style={{\r\n                    width: \"30px\",\r\n                    height: \"30px\",\r\n                    borderRadius: \"50%\",\r\n                }}\r\n                src={props.data.avatar_url}\r\n            />\r\n            <div className=\"mx-3\" style={{ width: \"100%\" }}>\r\n                <textarea\r\n                    autoFocus\r\n                    style={{ width: \"100%\", resize: \"none\" }}\r\n                    id=\"commentBody\"\r\n                    placeholder=\"댓글\"\r\n                ></textarea>\r\n                <button className=\"btn btn-success\" style={{ float: \"right\" }} type=\"submit\">\r\n                    Submit\r\n                </button>\r\n            </div>\r\n        </>\r\n    );\r\n\r\n    return (\r\n        <div key={props.e.id} className=\"githubook-card\">\r\n            <div className=\"githubook-card-title\">\r\n                <div>\r\n                    <span className=\"githubook-card-info\">\r\n                        <img\r\n                            src={props.e.actor.avatar_url}\r\n                            style={{ height: \"40px\", width: \"40px\" }}\r\n                        ></img>\r\n                        {infoBox(props.e.actor.avatar_url, props.e.actor.login)}\r\n                    </span>\r\n                </div>\r\n                <div>\r\n                    <div className=\"mb-0\">\r\n                        <span className=\"githubook-card-info\">\r\n                            {props.e.actor.login} &gt;&nbsp;{\" \"}\r\n                            {infoBox(props.e.actor.avatar_url, props.e.actor.login)}\r\n                        </span>\r\n\r\n                        <a href={\"https://github.com/\" + props.e.repo.name}>{props.e.repo.name}</a>\r\n                    </div>\r\n                    <div className=\"mb-0 githubook-card-date\">\r\n                        {dateA[1] ? dateA[1] : dateB}\r\n                        <span className=\"githubook-card-date-tooltips\">{dateA[0]}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"githubook-card-main\">\r\n                {props.e.type === \"PushEvent\" && (\r\n                    <>\r\n                        Commits\r\n                        <p className=\"lead\">- {props.e.payload.ref?.split(\"/\")[2]} branch</p>\r\n                        <hr />\r\n                        {props.e.payload.commits.map((c: any) => (\r\n                            <div key={c.sha}>\r\n                                <div className=\"py-3\">\r\n                                    <ReactMarkdown source={c.message} />\r\n                                    <p className=\"lead\">comitted by {c.author.name}</p>\r\n                                </div>\r\n                                <hr />\r\n                                <div className=\"\">\r\n                                    <a\r\n                                        onClick={() => {\r\n                                            toggleComment(c.sha);\r\n                                            handleComment(c.url, c.sha);\r\n                                        }}\r\n                                        style={{ fontSize: \"12px\" }}\r\n                                    >\r\n                                        댓글\r\n                                    </a>\r\n                                    <div className=\"githubook-card-comment\" id={c.sha}>\r\n                                        {comment && <CommentBox comment={comment} idx={c.sha} />}\r\n\r\n                                        <form\r\n                                            className=\"d-flex\"\r\n                                            onSubmit={(e: any) => {\r\n                                                e.preventDefault();\r\n                                                let comment = e.target.commentBody.value;\r\n                                                e.target.commentBody.value = \"\";\r\n                                                addGithubComment(\r\n                                                    c.url + \"/comments\",\r\n                                                    comment,\r\n                                                    auth.user\r\n                                                ).then((res) => {\r\n                                                    handleComment(c.url, c.sha);\r\n                                                    console.log(res);\r\n                                                });\r\n                                            }}\r\n                                        >\r\n                                            {commentForm}\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n                                <hr />\r\n                            </div>\r\n                        ))}\r\n                    </>\r\n                )}\r\n                {props.e.type === \"IssuesEvent\" && (\r\n                    <>\r\n                        Issues - {props.e.payload.action}\r\n                        <hr />\r\n                        <div className=\"py-3\">\r\n                            <ReactMarkdown\r\n                                source={props.e.payload.issue?.body}\r\n                                escapeHtml={false}\r\n                            />\r\n                        </div>\r\n                        <hr />\r\n                        <div className=\"\">\r\n                            <a\r\n                                onClick={() => {\r\n                                    toggleComment(props.e.id);\r\n                                    handleComment(props.e.payload.issue.comments_url, props.e.id);\r\n                                }}\r\n                                style={{ fontSize: \"12px\" }}\r\n                            >\r\n                                댓글\r\n                            </a>\r\n                            <div className=\"githubook-card-comment\" id={props.e.id}>\r\n                                {comment && <CommentBox comment={comment} idx={props.e.id} />}\r\n                                <div className=\"\">\r\n                                    <form\r\n                                        className=\"d-flex\"\r\n                                        onSubmit={(e: any) => {\r\n                                            e.preventDefault();\r\n                                            let comment = e.target.commentBody.value;\r\n                                            e.target.commentBody.value = \"\";\r\n                                            addGithubComment(\r\n                                                props.e.payload.issue.comments_url,\r\n                                                comment,\r\n                                                auth.user\r\n                                            ).then((res) => {\r\n                                                handleComment(\r\n                                                    props.e.payload.issue.comments_url,\r\n                                                    props.e.id\r\n                                                );\r\n                                                console.log(res);\r\n                                            });\r\n                                        }}\r\n                                    >\r\n                                        {commentForm}\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <hr />\r\n                    </>\r\n                )}\r\n                {props.e.type === \"PullRequestEvent\" && (\r\n                    <>\r\n                        PullRequest - {props.e.payload.action}\r\n                        <hr />\r\n                        <div className=\"py-3\">\r\n                            {props.e.payload.pull_request.body ? (\r\n                                <ReactMarkdown\r\n                                    source={props.e.payload.pull_request.body}\r\n                                    escapeHtml={false}\r\n                                />\r\n                            ) : (\r\n                                <p className=\"lead\">No description</p>\r\n                            )}\r\n                        </div>\r\n                        <hr />\r\n                        <div>\r\n                            <a\r\n                                onClick={() => {\r\n                                    toggleComment(props.e.id);\r\n                                    handleComment(\r\n                                        props.e.payload.pull_request.comments_url,\r\n                                        props.e.id\r\n                                    );\r\n                                }}\r\n                                style={{ fontSize: \"12px\" }}\r\n                            >\r\n                                댓글\r\n                            </a>\r\n                            <div className=\"githubook-card-comment\" id={props.e.id}>\r\n                                {comment && <CommentBox comment={comment} idx={props.e.id} />}\r\n                                <div className=\"\">\r\n                                    <form\r\n                                        className=\"d-flex\"\r\n                                        onSubmit={(e: any) => {\r\n                                            e.preventDefault();\r\n                                            let comment = e.target.commentBody.value;\r\n                                            e.target.commentBody.value = \"\";\r\n                                            addGithubComment(\r\n                                                props.e.payload.issue.comments_url,\r\n                                                comment,\r\n                                                auth.user\r\n                                            ).then((res) => {\r\n                                                handleComment(\r\n                                                    props.e.payload.issue.comments_url,\r\n                                                    props.e.id\r\n                                                );\r\n                                                console.log(res);\r\n                                            });\r\n                                        }}\r\n                                    >\r\n                                        {commentForm}\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <hr />\r\n                    </>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Card;\r\n","import axios from \"axios\";\r\n\r\nconst getGithubInfo = (username: string | null) => {\r\n    const config = {\r\n        headers: {\r\n            Authorization: `token ${username}`,\r\n        },\r\n    };\r\n\r\n    return axios.get<GithubProfile>(`https://api.github.com/user`, config);\r\n\r\n    /*const response = await axios.get<GithubProfile>(`https://api.github.com/users/${username}`);*/\r\n};\r\n\r\nexport interface GithubProfile {\r\n    login?: string;\r\n    id?: number;\r\n    node_id?: string;\r\n    avatar_url?: string;\r\n    gravatar_id?: string;\r\n    url?: string;\r\n    html_url?: string;\r\n    followers_url?: string;\r\n    following_url?: string;\r\n    gists_url?: string;\r\n    starred_url?: string;\r\n    subscriptions_url?: string;\r\n    organizations_url?: string;\r\n    repos_url?: string;\r\n    events_url?: string;\r\n    received_events_url?: string;\r\n    type?: string;\r\n    site_admin?: boolean;\r\n    name?: string;\r\n    company?: string;\r\n    blog?: string;\r\n    location?: null;\r\n    email?: null;\r\n    hireable?: null;\r\n    bio?: string;\r\n    public_repos?: number;\r\n    public_gists?: number;\r\n    followers?: number;\r\n    following?: number;\r\n    created_at?: Date;\r\n    updated_at?: Date;\r\n}\r\n\r\nexport default getGithubInfo;\r\n","import axios from \"axios\";\r\n\r\nexport const getGithubEvent = (username: string | undefined, token: string) => {\r\n    const config = {\r\n        headers: {\r\n            Authorization: `token ${token}`,\r\n        },\r\n    };\r\n\r\n    return axios.get<GithubEvent[]>(`https://api.github.com/users/${username}/events`, config);\r\n};\r\n\r\nexport interface GithubEvent {\r\n    id: string;\r\n    type: string;\r\n    actor: {\r\n        id: number;\r\n        login: string;\r\n        display_login: string;\r\n        gravatar_id: string;\r\n        url: string;\r\n        avatar_url: string;\r\n    };\r\n    repo: {\r\n        id: number;\r\n        name: string;\r\n        url: string;\r\n    };\r\n    payload: {\r\n        push_id: number;\r\n        size: number;\r\n        distinct_size: number;\r\n        ref: string;\r\n        head: string;\r\n        before: string;\r\n        commits: [\r\n            {\r\n                sha: string;\r\n                author: {\r\n                    email: string;\r\n                    name: string;\r\n                };\r\n                message: string;\r\n                distinct: true;\r\n                url: string;\r\n            }\r\n        ];\r\n    };\r\n    public: true;\r\n    created_at: string;\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport getGithubInfo, { GithubProfile } from \"../../api/getGithubInfo\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setCurrentUser } from \"../../actions/authAction\";\r\n\r\nconst Nav = (props: any) => {\r\n    return (\r\n        <div id=\"githubook-nav\">\r\n            <div id=\"githubook-nav-side-l\">\r\n                <img\r\n                    src=\"https://img.icons8.com/cotton/40/000000/cat--v3.png\"\r\n                    style={{ width: \"35px\", height: \"35px\" }}\r\n                ></img>\r\n                {/*\r\n                \r\n                <div id=\"githubook-search\">\r\n                    <label htmlFor=\"q\">\r\n                        <div id=\"q-icon\"></div>\r\n                        <input\r\n                            id=\"q\"\r\n                            type=\"search\"\r\n                            placeholder=\"github Id\"\r\n                            onKeyPress={async (e: any) => {\r\n                                if (e.key === \"Enter\" && e.target.value !== \"\") {\r\n                                    localStorage.setItem(\"token\", e.target.value);\r\n                                    window.location.reload();\r\n                                }\r\n                            }}\r\n                        ></input>\r\n                    </label>\r\n                </div>\r\n                */}\r\n            </div>\r\n            <div id=\"githubook-nav-main\">\r\n                <ul\r\n                    onClick={(e: any) => {\r\n                        if (e.target.tagName !== \"UL\")\r\n                            document.getElementsByClassName(\"active\")[0].classList.toggle(\"active\");\r\n                        if (e.target.tagName === \"IMG\") {\r\n                            props.handleEventType(e.target.parentElement.id);\r\n                            e.target.parentElement.classList.toggle(\"active\");\r\n                        }\r\n                        if (e.target.tagName === \"LI\") {\r\n                            props.handleEventType(e.target.id);\r\n                            e.target.classList.toggle(\"active\");\r\n                        }\r\n                    }}\r\n                    id=\"githubook-nav-main-ul\"\r\n                    className=\"githubook-nav-main-ul\"\r\n                >\r\n                    <li id=\"All\" className=\"githubook-card-date active\">\r\n                        <img src=\"https://img.icons8.com/android/24/000000/home.png\" />\r\n                        <span className=\"githubook-card-date-tooltips\">{\"All Events\"}</span>\r\n                    </li>\r\n                    <li id=\"PushEvent\" className=\"githubook-card-date\">\r\n                        <img src=\"https://img.icons8.com/ios/40/000000/commit-git.png\" />\r\n                        <span className=\"githubook-card-date-tooltips\">{\"Commits\"}</span>\r\n                    </li>\r\n                    <li id=\"PullRequestEvent\" className=\"githubook-card-date\">\r\n                        <img src=\"https://img.icons8.com/ios/24/000000/pull-request.png\" />\r\n                        <span className=\"githubook-card-date-tooltips\">{\"Pull Requests\"}</span>\r\n                    </li>\r\n                    <li id=\"IssuesEvent\" className=\"githubook-card-date\">\r\n                        <img src=\"https://img.icons8.com/ios/100/000000/exclamation-mark.png\" />\r\n                        <span className=\"githubook-card-date-tooltips\">{\"Issues\"}</span>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            <div id=\"githubook-nav-side-r\">\r\n                <img\r\n                    className=\"mr-2\"\r\n                    src={props.data.avatar_url}\r\n                    style={{ width: \"30px\", height: \"30px\", borderRadius: \"50%\" }}\r\n                ></img>\r\n                <span className=\"mr-4\">{props.data.login}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Nav;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Card from \"../Card\";\r\nimport getGithubInfo, { GithubProfile } from \"../../api/getGithubInfo\";\r\nimport { getGithubFollower, getGithubFollowing, GithubFollow } from \"../../api/getGithubFollow\";\r\nimport { getGithubEvent, GithubEvent } from \"../../api/getGithubEvent\";\r\n\r\nimport Nav from \"../Nav\";\r\nimport \"./githubook.scss\";\r\n\r\nconst menubox = (image: string, text: string, imgStyle: string) => {\r\n    return (\r\n        <div className=\"githubook-menubox\">\r\n            <div className=\"githubook-menubox-icon\">\r\n                <img className={imgStyle} src={image}></img>\r\n            </div>\r\n            <div className=\"githubook-menubox-text\">\r\n                <span>{text}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const infoBox = (avatar: string, name: string) => {\r\n    return (\r\n        <div className=\"githubook-card-info-box\">\r\n            <div>\r\n                <img src={avatar} style={{ height: \"60px\", width: \"60px\" }}></img>\r\n                {name}\r\n            </div>\r\n            <div className=\"mt-3\">\r\n                <a href={\"https://github.com/\" + name}>깃허브 - https://github.com/{name}</a>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Githubook = (props: any) => {\r\n    const auth = useSelector((state: any) => state.auth);\r\n\r\n    const [sideToggle, setSideToggle] = useState(false);\r\n    const [data, setData] = useState<GithubProfile | null>();\r\n    const [following, setFollowing] = useState<GithubFollow[]>([]);\r\n    const [events, setEvents] = useState<GithubEvent[]>([]);\r\n    const [eventType, setEventType] = useState(\"All\");\r\n    const [idx, setIdx] = useState(10);\r\n\r\n    useEffect(() => {\r\n        getGithubInfo(auth.user).then((info) => {\r\n            let eventList: any = [],\r\n                idx = 0;\r\n\r\n            console.log(info.data);\r\n            setData(info.data);\r\n\r\n            getGithubEvent(info.data.login, auth.user).then((e) => {\r\n                eventList.push(...e.data);\r\n            });\r\n\r\n            getGithubFollowing(auth.user).then((following) => {\r\n                setFollowing(following.data);\r\n\r\n                let getFollowingEvent = () => {\r\n                    return new Promise((res, rej) => {\r\n                        following.data.forEach((f: any, i: number) => {\r\n                            getGithubEvent(f.login, auth.user).then((event) => {\r\n                                eventList.push(...event.data);\r\n                                idx += 1;\r\n                                if (idx === following.data.length) res(eventList);\r\n                            });\r\n                        });\r\n                    });\r\n                };\r\n\r\n                getFollowingEvent().then((el: any) => {\r\n                    el.sort((a: any, b: any) => {\r\n                        var foo = new Date(a.created_at),\r\n                            bar = new Date(b.created_at);\r\n                        return foo > bar ? -1 : 1;\r\n                    });\r\n                    setEvents(el);\r\n                    console.log(el);\r\n                });\r\n            });\r\n        });\r\n    }, []);\r\n\r\n    const handleEventList = () => {\r\n        let li = [];\r\n\r\n        for (var i = 0; i < events.length; i++) {\r\n            if (eventType === \"All\") {\r\n                if (\r\n                    events[i].type === \"PushEvent\" ||\r\n                    events[i].type === \"PullRequestEvent\" ||\r\n                    events[i].type === \"IssuesEvent\"\r\n                )\r\n                    li.push(<Card key={events[i].id} e={events[i]} data={data} />);\r\n            } else {\r\n                events[i].type === eventType &&\r\n                    li.push(<Card key={events[i].id} e={events[i]} data={data} />);\r\n            }\r\n\r\n            if (li.length === idx) break;\r\n        }\r\n        return li;\r\n    };\r\n\r\n    const handleEventType = (v: any) => {\r\n        setEventType(v);\r\n        setIdx(10);\r\n    };\r\n\r\n    const logout = () => {\r\n        localStorage.removeItem(\"token\");\r\n    };\r\n\r\n    return (\r\n        <div id=\"githubook-container\">\r\n            {data && (\r\n                <>\r\n                    <Nav data={data} handleEventType={handleEventType} />\r\n                    <div id=\"githubook-body\">\r\n                        <div id=\"githubook-side-l\">\r\n                            {[\r\n                                [data.avatar_url, data.login, \"circle\", \"/githubook\"],\r\n                                [\r\n                                    \"https://img.icons8.com/fluent/48/000000/github.png\",\r\n                                    \"깃허브\",\r\n                                    \"square\",\r\n                                    data.html_url,\r\n                                ],\r\n                                [\r\n                                    \"https://img.icons8.com/dotty/50/000000/repository.png\",\r\n                                    \"저장소\",\r\n                                    \"square\",\r\n                                    data.html_url + \"?tab=repositories\",\r\n                                ],\r\n                                [\r\n                                    \"https://img.icons8.com/ios-glyphs/50/000000/pet-commands-follow.png\",\r\n                                    \"팔로워\",\r\n                                    \"square\",\r\n                                    data.html_url + \"?tab=followers\",\r\n                                ],\r\n                                [\r\n                                    \"https://img.icons8.com/doodle/48/000000/follow--v1.png\",\r\n                                    \"팔로잉\",\r\n                                    \"square\",\r\n                                    data.html_url + \"?tab=followings\",\r\n                                ],\r\n                            ].map((md: any, i) => (\r\n                                <a key={i} href={md[3]}>\r\n                                    {menubox(md[0], md[1], md[2])}\r\n                                </a>\r\n                            ))}\r\n                            <a href=\"http://localhost:3000\" onClick={logout}>\r\n                                &nbsp;&nbsp;&nbsp;logout test\r\n                            </a>\r\n                            {sideToggle ? (\r\n                                <>\r\n                                    {[\r\n                                        [\r\n                                            \"https://img.icons8.com/bubbles/48/000000/list.png\",\r\n                                            \"Gist\",\r\n                                            \"square\",\r\n                                            \"https://gist.github.com/\" + data.login,\r\n                                        ],\r\n                                        [\r\n                                            \"https://img.icons8.com/cotton/64/000000/star.png\",\r\n                                            \"Star\",\r\n                                            \"square\",\r\n                                            data.html_url + \"?tab=stars\",\r\n                                        ],\r\n                                    ].map((md: any, i) => (\r\n                                        <a key={i + 4} href={md[3]}>\r\n                                            {menubox(md[0], md[1], md[2])}\r\n                                        </a>\r\n                                    ))}\r\n                                    <div onClick={() => setSideToggle(sideToggle ? false : true)}>\r\n                                        {menubox(\r\n                                            \"https://img.icons8.com/windows/64/000000/minus.png\",\r\n                                            \"간략하게 보기\",\r\n                                            \"square\"\r\n                                        )}\r\n                                    </div>\r\n                                </>\r\n                            ) : (\r\n                                <>\r\n                                    <div onClick={() => setSideToggle(sideToggle ? false : true)}>\r\n                                        {menubox(\r\n                                            \"https://img.icons8.com/windows/48/000000/plus.png\",\r\n                                            \"더보기\",\r\n                                            \"square\"\r\n                                        )}\r\n                                    </div>\r\n                                </>\r\n                            )}\r\n                        </div>\r\n\r\n                        <div id=\"githubook-main\">\r\n                            {handleEventList()}\r\n\r\n                            <a className=\"p-4\" onClick={() => setIdx(idx + 10)}>\r\n                                더 보기\r\n                            </a>\r\n                        </div>\r\n                        <div id=\"githubook-side-r\">\r\n                            <div className=\"madeinfo\">\r\n                                <h1>Made By</h1>\r\n                                <div className=\"madeinfo-content\">\r\n                                    <a href=\"https://github.com/hyeonjaae/githubook\">\r\n                                        {menubox(\r\n                                            \"https://avatars0.githubusercontent.com/u/34333474?v=4\",\r\n                                            \"HyeonJaae\",\r\n                                            \"circle\"\r\n                                        )}\r\n                                    </a>\r\n                                </div>\r\n                                <hr />\r\n                            </div>\r\n                            <div className=\"following\">\r\n                                <h1>Following</h1>\r\n                                <div className=\"following-content\">\r\n                                    {following.map((f, i) => (\r\n                                        <div key={i} className=\"\">\r\n                                            <a href={f.html_url}>\r\n                                                {menubox(f.avatar_url, f.login, \"circle\")}\r\n                                            </a>\r\n                                            {infoBox(f.avatar_url, f.login)}\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Githubook;\r\n","import axios from \"axios\";\r\n\r\nexport const getGithubFollower = (username: string | null) => {\r\n    return axios.get<GithubFollow[]>(`https://api.github.com/users/${username}/followers`);\r\n};\r\n\r\nexport const getGithubFollowing = (username: string | null) => {\r\n    const config = {\r\n        headers: {\r\n            Authorization: `token ${username}`,\r\n        },\r\n    };\r\n\r\n    return axios.get(`https://api.github.com/user/following`, config);\r\n    /*return axios.get<GithubFollow[]>(\r\n        `https://api.github.com/users/${username}/following`\r\n    );*/\r\n};\r\n\r\nexport interface GithubFollow {\r\n    login: string;\r\n    id: number;\r\n    node_id: string;\r\n    avatar_url: string;\r\n    gravatar_id: string;\r\n    url: string;\r\n    html_url: string;\r\n    followers_url: string;\r\n    following_url: string;\r\n    gists_url: string;\r\n    starred_url: string;\r\n    subscriptions_url: string;\r\n    organizations_url: string;\r\n    repos_url: string;\r\n    events_url: string;\r\n    received_events_url: string;\r\n    type: string;\r\n    site_admin: false;\r\n}\r\n","export const key = {\r\n    CLIENT_ID: \"504c566c0230964f360d\",\r\n    CLIENT_SECRET: \"e6821d09a158291b5704634c2f49052d50a6e278\",\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { setCurrentUser } from \"../../actions/authAction\";\r\nimport { key } from \"../../config\";\r\nimport { githubLogin } from \"../../api/githubLogin\";\r\n\r\nconst Login = () => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const redirect_uri_dev = \"http://localhost:3000\";\r\n    const redirect_uri = \"https://hyeonjaae.github.io/githubook\";\r\n    const login_url =\r\n        \"https://github.com/login/oauth/authorize?\" +\r\n        \"client_id=\" +\r\n        key.CLIENT_ID +\r\n        \"&redirect_uri=\" +\r\n        redirect_uri +\r\n        \"&scope=repo\";\r\n\r\n    useEffect(() => {\r\n        const url = \"https://github.com/login/oauth/access_token\";\r\n        const data = {\r\n            code: window.location.search.split(\"=\")[1],\r\n            client_id: key.CLIENT_ID,\r\n            client_secret: key.CLIENT_SECRET,\r\n        };\r\n\r\n        if (data.code) {\r\n            githubLogin(url, data)\r\n                .then((res) => {\r\n                    localStorage.setItem(\"token\", res.data.access_token);\r\n                    dispatch(setCurrentUser(localStorage.getItem(\"token\")));\r\n                    history.push(\"/\");\r\n                })\r\n                .catch((err) => console.log(err));\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"text-center\">\r\n            <a href={login_url}>Github Login</a>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","import axios from \"axios\";\r\n\r\nexport const githubLogin = (url: string, data: any) => {\r\n    const headers = {\r\n        headers: {\r\n            accept: \"application/json\",\r\n        },\r\n    };\r\n    return axios.post(url, data, headers);\r\n};\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Githubook from \"../Githubook\";\r\nimport Login from \"../Login\";\r\nimport \"./home.scss\";\r\n\r\nconst Home = () => {\r\n    const auth = useSelector((state: any) => state.auth);\r\n\r\n    return <>{auth.user ? <Githubook /> : <Login />}</>;\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Route, BrowserRouter as Router } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setCurrentUser } from \"./actions/authAction\";\r\nimport Home from \"./Components/Home\";\r\n\r\nconst App = () => {\r\n    const dispatch = useDispatch();\r\n    dispatch(setCurrentUser(localStorage.getItem(\"token\")));\r\n    return (\r\n        <Router basename={process.env.PUBLIC_URL}>\r\n            <Route exact path=\"/\" component={Home} />\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { AuthTypes, SET_USER } from \"../actions/authAction\";\r\n\r\ntype AuthState = {\r\n    user: object;\r\n};\r\n\r\nconst initialState: AuthState = {\r\n    user: {},\r\n};\r\n\r\nexport default (state = initialState, action: AuthTypes) => {\r\n    switch (action.type) {\r\n        case SET_USER:\r\n            return {\r\n                user: action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","const initialState = {};\r\n\r\nexport default function (state = initialState, action : any) {\r\n    switch (action.type) {\r\n        case \"GET_ERRORS\":\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport authReducer from \"../reducers/authReducers\";\r\nimport errorReducer from \"../reducers/errorReducers\";\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    errors: errorReducer,\r\n});\r\nexport default rootReducer;\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n","const loggerMiddleware = (store:any) => (next:any) => (action:any) => {\r\n    \r\n    console.log(\"current state\", store.getState());\r\n    console.log('action', action);\r\n\r\n    //액션을 다음 미들웨어, 혹은 리듀서로 전달\r\n    const result = next(action);\r\n    \r\n    console.log(\"next state\", store.getState());\r\n    console.log('\\n');\r\n\r\n    return result;\r\n}\r\n\r\nexport default loggerMiddleware;","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\nimport loggerMiddleware from \"./lib/loggerMiddleware\";\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk, loggerMiddleware];\r\n\r\nconst store = createStore(rootReducer, initialState, compose(applyMiddleware(...middleware)));\r\n\r\nexport default store;\r\n\r\n/*\r\ncreateStore(reducer, [preloadedState], [enhancer])\r\ncompose to enhance a store with applyMiddleware and a few developer tools from the redux-devtools package.\r\n*/\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}