{"version":3,"sources":["actions/authAction.tsx","api/getGithubInfo.ts","api/getGithubEvent.ts","Components/Nav/index.tsx","Components/Githubook/index.tsx","api/getGithubFollow.ts","Components/Home/index.tsx","Components/Login/index.tsx","App.tsx","serviceWorker.ts","reducers/authReducers.tsx","reducers/errorReducers.tsx","actions/counterAction.tsx","reducers/counterReducers.tsx","reducers/index.tsx","lib/loggerMiddleware.tsx","store.tsx","index.tsx"],"names":["SET_USER","setCurrentUser","user","type","payload","getGithubInfo","username","axios","get","headers","Authorization","getGithubEvent","token","Nav","useDispatch","id","src","style","width","height","htmlFor","placeholder","onKeyPress","e","a","key","target","value","localStorage","setItem","window","location","reload","className","onClick","removeItem","menubox","image","text","Githubook","auth","useSelector","state","useState","sideToggle","setSideToggle","data","setData","following","setFollowing","events","setEvents","useEffect","then","info","login","forEach","f","event","sort","b","Date","created_at","console","log","avatar_url","html_url","repos_url","followers_url","following_url","map","md","href","gists_url","starred_url","idx","actor","card","Home","props","Login","dispatch","post","code","search","split","client_id","client_secret","accept","res","access_token","history","push","catch","err","role","App","getItem","basename","process","exact","path","component","Boolean","hostname","match","initialState","INCREASE","DECREASE","count","rootReducer","combineReducers","action","counter","errors","loggerMiddleware","store","next","getState","result","middleware","thunk","createStore","compose","applyMiddleware","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.073b7195.chunk.js","sourcesContent":["// set logged in user\r\n\r\nexport type AuthTypes = ReturnType<typeof setCurrentUser>;\r\n\r\nexport const SET_USER = \"SET_CURRENT_USER\" as const;\r\n\r\nexport const setCurrentUser = (user: any) => ({\r\n    type: SET_USER,\r\n    payload: user,\r\n});\r\n","import axios from \"axios\";\r\n\r\nconst getGithubInfo =  (username: string| null ) => {\r\n    /*const response = await axios.get<GithubProfile>(\r\n        `https://api.github.com/users/${username}`\r\n    );*/\r\n\r\n    return axios.get<GithubProfile>(\r\n        `https://api.github.com/user` ,  {\r\n            headers: {\r\n              Authorization: `token ${username}`,\r\n            },\r\n          }\r\n    );\r\n}\r\n\r\nexport interface GithubProfile {\r\n    login?: string;\r\n    id?: number;\r\n    node_id?: string;\r\n    avatar_url?: string;\r\n    gravatar_id?: string;\r\n    url?: string;\r\n    html_url?: string;\r\n    followers_url?: string;\r\n    following_url?: string;\r\n    gists_url?: string;\r\n    starred_url?: string;\r\n    subscriptions_url?: string;\r\n    organizations_url?: string;\r\n    repos_url?: string;\r\n    events_url?: string;\r\n    received_events_url?: string;\r\n    type?: string;\r\n    site_admin?: boolean;\r\n    name?: string;\r\n    company?: string;\r\n    blog?: string;\r\n    location?: null;\r\n    email?: null;\r\n    hireable?: null;\r\n    bio?: string;\r\n    public_repos?: number;\r\n    public_gists?: number;\r\n    followers?: number;\r\n    following?: number;\r\n    created_at?: Date;\r\n    updated_at?: Date;\r\n}\r\n\r\n\r\nexport default getGithubInfo;","import axios from \"axios\";\r\n\r\nexport const getGithubEvent = (username: string| undefined, token: string) => {\r\n    /*return axios.get<GithubEvent[]>(\r\n        `https://api.github.com/events` ,  {\r\n            headers: {\r\n              Authorization: `token ${username}`,\r\n            },\r\n          }\r\n    )*/\r\n    \r\n    return axios.get<GithubEvent[]>(\r\n        `https://api.github.com/users/${username}/events`,  {\r\n            headers: {\r\n              Authorization: `token ${token}`,\r\n            },\r\n          }\r\n    )\r\n}\r\n\r\nexport interface GithubEvent {\r\n    id: string,\r\n    type: string,\r\n    actor: {\r\n        id: number,\r\n        login: string,\r\n        display_login: string,\r\n        gravatar_id: string,\r\n        url: string,\r\n        avatar_url: string\r\n    },\r\n    repo: {\r\n        id: number,\r\n        name: string,\r\n        url: string\r\n    },\r\n    payload: {\r\n        push_id: number,\r\n        size: number,\r\n        distinct_size: number,\r\n        ref: string,\r\n        head: string\r\n        before: string\r\n        commits: [\r\n        {\r\n            sha: string,\r\n            author: {\r\n            email: string,\r\n            name: string\r\n            },\r\n            message: string,\r\n            distinct: true,\r\n            url: string\r\n        }\r\n        ]\r\n    },\r\n    public: true,\r\n    created_at: string\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport getGithubInfo from \"../../api/getGithubInfo\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setCurrentUser } from \"../../actions/authAction\";\r\n\r\nconst Nav = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <div id=\"githubook-nav\">\r\n            <div id=\"githubook-nav-side-l\">\r\n                <img\r\n                    src=\"https://en.followersnet.com/wp-content/uploads/2016/02/Facebook-1.png\"\r\n                    style={{ width: \"40px\", height: \"40px\" }}\r\n                ></img>\r\n                <div id=\"githubook-search\">\r\n                    <label htmlFor=\"q\">\r\n                        <div id=\"q-icon\"></div>\r\n                        <input\r\n                            id=\"q\"\r\n                            type=\"search\"\r\n                            placeholder=\"github Id\"\r\n                            onKeyPress={async (e: any) => {\r\n                                if (e.key === \"Enter\" && e.target.value !== \"\") {\r\n                                    localStorage.setItem(\"token\", e.target.value);\r\n                                    window.location.reload();\r\n                                }\r\n                            }}\r\n                        ></input>\r\n                    </label>\r\n                </div>\r\n            </div>\r\n            <div id=\"githubook-nav-main\">\r\n                <ul className=\"githubook-nav-main-ul\">\r\n                    <li>\r\n                        <button\r\n                            onClick={() => {\r\n                                localStorage.removeItem(\"token\");\r\n                            }}\r\n                        >\r\n                            버튼\r\n                        </button>\r\n                    </li>\r\n                    <li>\r\n                        <button>버튼</button>\r\n                    </li>\r\n                    <li>\r\n                        <button>버튼</button>\r\n                    </li>\r\n                    <li>\r\n                        <button>버튼</button>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            <div id=\"githubook-nav-side-r\"></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Nav;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport getGithubInfo, { GithubProfile } from \"../../api/getGithubInfo\";\r\nimport { getGithubFollower, getGithubFollowing, GithubFollow } from \"../../api/getGithubFollow\";\r\nimport { getGithubEvent, GithubEvent } from \"../../api/getGithubEvent\";\r\nimport Nav from \"../Nav\";\r\nimport \"./githubook.scss\";\r\n\r\nconst menubox = (image: string, text: string) => {\r\n    return (\r\n        <div className=\"githubook-menubox\">\r\n            <div className=\"githubook-menubox-icon\">\r\n                <img src={image}></img>\r\n            </div>\r\n            <div className=\"githubook-menubox-text\">\r\n                <span>{text}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst card = (e: any, idx: number) => {\r\n    return (\r\n        <div key={idx} className=\"githubook-card\">\r\n            <img src={e.actor.avatar_url} style={{ height: \"40px\", width: \"40px\" }}></img>\r\n            <h2>{e.actor.login}</h2>\r\n            <h1>{e.type}</h1>\r\n            <h6>{e.created_at}</h6>\r\n            <hr />\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Githubook = () => {\r\n    const auth = useSelector((state: any) => state.auth);\r\n\r\n    const [sideToggle, setSideToggle] = useState(false);\r\n    const [data, setData] = useState<GithubProfile | null>();\r\n    const [following, setFollowing] = useState<GithubFollow[]>([]);\r\n    const [events, setEvents] = useState<GithubEvent[]>([]);\r\n\r\n    useEffect(() => {\r\n        getGithubInfo(auth.user).then((info) => {\r\n            setData(info.data);\r\n            getGithubEvent(info.data.login, auth.user).then((e) => {\r\n                //console.log(e);\r\n                setEvents((events) => [...events, ...e.data]);\r\n            });\r\n            getGithubFollowing(auth.user).then((following) => {\r\n                setFollowing(following.data);\r\n\r\n                following.data.forEach((f: any) => {\r\n                    getGithubEvent(f.login, auth.user).then((event) => {\r\n                        setEvents((events) => [...events, ...event.data]);\r\n                    });\r\n                });\r\n            });\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setEvents((events) =>\r\n            events.sort((a, b) => {\r\n                var foo = new Date(a.created_at),\r\n                    bar = new Date(b.created_at);\r\n                return foo > bar ? -1 : 1;\r\n            })\r\n        );\r\n        console.log(events);\r\n    });\r\n\r\n    return (\r\n        <div id=\"githubook-container\">\r\n            {data && (\r\n                <>\r\n                    <Nav />\r\n                    <div id=\"githubook-body\">\r\n                        <div id=\"githubook-side-l\">\r\n                            {[\r\n                                [data.avatar_url, data.login, \"/githubook\"],\r\n                                [data.avatar_url, \"깃허브\", data.html_url],\r\n                                [data.avatar_url, \"저장소\", data.repos_url],\r\n                                [data.avatar_url, \"팔로워\", data.followers_url],\r\n                                [data.avatar_url, \"팔로잉\", data.following_url],\r\n                            ].map((md: any) => (\r\n                                <a href={md[2]}>{menubox(md[0], md[1])}</a>\r\n                            ))}\r\n                            {sideToggle ? (\r\n                                <>\r\n                                    {[\r\n                                        [data.avatar_url, \"Gist\", data.gists_url],\r\n                                        [data.avatar_url, \"Star\", data.starred_url],\r\n                                    ].map((md: any) => (\r\n                                        <a href={md[2]}>{menubox(md[0], md[1])}</a>\r\n                                    ))}\r\n                                    <div onClick={() => setSideToggle(sideToggle ? false : true)}>\r\n                                        {menubox(\r\n                                            \"https://en.followersnet.com/wp-content/uploads/2016/02/Facebook-1.png\",\r\n                                            \"간략하게 보기\"\r\n                                        )}\r\n                                    </div>\r\n                                </>\r\n                            ) : (\r\n                                <>\r\n                                    <div onClick={() => setSideToggle(sideToggle ? false : true)}>\r\n                                        {menubox(\r\n                                            \"https://en.followersnet.com/wp-content/uploads/2016/02/Facebook-1.png\",\r\n                                            \"더보기\"\r\n                                        )}\r\n                                    </div>\r\n                                </>\r\n                            )}\r\n                        </div>\r\n\r\n                        <div id=\"githubook-main\">{events.map((e, idx) => card(e, idx))}</div>\r\n                        <div id=\"githubook-side-r\">\r\n                            <div className=\"madeinfo\">\r\n                                <h1>Made By</h1>\r\n                                <div className=\"madeinfo-content\">\r\n                                    <a href=\"https://github.com/hyeonjaae\">\r\n                                        {menubox(\r\n                                            \"https://avatars0.githubusercontent.com/u/34333474?v=4\",\r\n                                            \"HyeonJaae\"\r\n                                        )}\r\n                                    </a>\r\n                                </div>\r\n                                <hr />\r\n                            </div>\r\n                            <div className=\"following\">\r\n                                <h1>Following</h1>\r\n                                <div className=\"following-content\">\r\n                                    {following.map((f) => (\r\n                                        <a>{menubox(f.avatar_url, f.login)}</a>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Githubook;\r\n","import axios from \"axios\";\r\n\r\nexport const getGithubFollower = (username: string| null) => {\r\n    return axios.get<GithubFollow[]>(\r\n        `https://api.github.com/users/${username}/followers`\r\n    );\r\n}\r\n\r\nexport const getGithubFollowing = (username: string| null) => {\r\n    return axios.get(`https://api.github.com/user/following`, {\r\n        headers: {\r\n          Authorization: `token ${username}`,\r\n        },\r\n      })\r\n    /*return axios.get<GithubFollow[]>(\r\n        `https://api.github.com/users/${username}/following`\r\n    );*/\r\n}\r\n\r\nexport interface GithubFollow {\r\n    login: string,\r\n    id: number,\r\n    node_id: string,\r\n    avatar_url: string,\r\n    gravatar_id: string,\r\n    url: string,\r\n    html_url: string,\r\n    followers_url: string,\r\n    following_url: string,\r\n    gists_url: string,\r\n    starred_url: string,\r\n    subscriptions_url: string,\r\n    organizations_url: string,\r\n    repos_url: string,\r\n    events_url: string,\r\n    received_events_url: string,\r\n    type: string,\r\n    site_admin: false\r\n}\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Githubook from \"../Githubook\";\r\nimport \"./home.scss\";\r\n\r\nconst Home = (props: any) => {\r\n    const auth = useSelector((state: any) => state.auth);\r\n\r\n    return (\r\n        <>\r\n            {auth.user ? (\r\n                <Githubook />\r\n            ) : (\r\n                <div id=\"home-container\">\r\n                    <a href=\"https://github.com/login/oauth/authorize?client_id=504c566c0230964f360d&redirect_uri=https://hyeonjaae.github.io/githubook/login\">\r\n                        <img\r\n                            src=\"https://d2eip9sf3oo6c2.cloudfront.net/tags/images/000/000/276/square_480/github_logo.png\"\r\n                            style={{ width: \"40px\", height: \"40px\" }}\r\n                        ></img>\r\n                        <img\r\n                            src=\"https://en.followersnet.com/wp-content/uploads/2016/02/Facebook-1.png\"\r\n                            style={{ width: \"60px\", height: \"60px\" }}\r\n                        ></img>\r\n                    </a>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setCurrentUser } from \"../../actions/authAction\";\r\nimport axios from \"axios\";\r\n\r\nconst Login = (props: any) => {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .post(\r\n                \"https://cors-anywhere.herokuapp.com/https://github.com/login/oauth/access_token\",\r\n                {\r\n                    code: window.location.search.split(\"=\")[1],\r\n                    client_id: \"504c566c0230964f360d\",\r\n                    client_secret: \"e6821d09a158291b5704634c2f49052d50a6e278\",\r\n                },\r\n                {\r\n                    headers: {\r\n                        accept: \"application/json\",\r\n                    },\r\n                }\r\n            )\r\n            .then((res) => {\r\n                console.log(res);\r\n                dispatch(setCurrentUser(res.data.access_token));\r\n                props.history.push(\"/\");\r\n            })\r\n            .catch((err) => console.log(err));\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"text-center\">\r\n            <div className=\"spinner-border\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\nimport { Route, BrowserRouter as Router } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { setCurrentUser } from \"./actions/authAction\";\nimport Home from \"./Components/Home\";\nimport Login from \"./Components/Login\";\n\nconst App = () => {\n    const dispatch = useDispatch();\n    dispatch(setCurrentUser(localStorage.getItem(\"token\")));\n    return (\n        <Router basename={process.env.PUBLIC_URL}>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/login\" component={Login} />\n        </Router>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { AuthTypes, SET_USER } from \"../actions/authAction\";\r\n\r\ntype AuthState = {\r\n    user: object;\r\n};\r\n\r\nconst initialState: AuthState = {\r\n    user: {},\r\n};\r\n\r\nexport default (state = initialState, action: AuthTypes) => {\r\n    switch (action.type) {\r\n        case SET_USER:\r\n            return {\r\n                user: action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","const initialState = {};\r\n\r\nexport default function (state = initialState, action : any) {\r\n    switch (action.type) {\r\n        case \"GET_ERRORS\":\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","export type CountTypes =\r\n    | ReturnType<typeof increase>\r\n    | ReturnType<typeof decrease>\r\n    | ReturnType<typeof increaseBy>;\r\n\r\nexport const INCREASE = \"counter/INCREASE\" as const;\r\nexport const DECREASE = \"counter/DECREASE\" as const;\r\nexport const INCREASE_BY = \"counter/INCREASE_BY\" as const;\r\n\r\nexport const increase = () => ({ type: INCREASE });\r\nexport const decrease = () => ({ type: DECREASE });\r\nexport const increaseBy = (diff: number) => ({\r\n    type: INCREASE_BY,\r\n    payload: diff,\r\n});\r\n","import { CountTypes, INCREASE, DECREASE, INCREASE_BY } from \"../actions/counterAction\";\r\n\r\ntype CounterState = {\r\n    count: number;\r\n};\r\n\r\nconst initialState: CounterState = {\r\n    count: 0,\r\n};\r\n\r\nexport default (state: CounterState = initialState, action: CountTypes) => {\r\n    switch (action.type) {\r\n        case INCREASE:\r\n            return {\r\n                count: state.count + 1,\r\n            };\r\n        case DECREASE:\r\n            return {\r\n                count: state.count - 1,\r\n            };\r\n        case INCREASE_BY:\r\n            return {\r\n                count: state.count + action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport authReducer from \"../reducers/authReducers\";\r\nimport errorReducer from \"../reducers/errorReducers\";\r\nimport countReducer from \"./counterReducers\";\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    counter: countReducer,\r\n    errors: errorReducer,\r\n});\r\nexport default rootReducer;\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n","const loggerMiddleware = (store:any) => (next:any) => (action:any) => {\r\n    \r\n    console.log(\"current state\", store.getState());\r\n    console.log('action', action);\r\n\r\n    //액션을 다음 미들웨어, 혹은 리듀서로 전달\r\n    const result = next(action);\r\n    \r\n    console.log(\"next state\", store.getState());\r\n    console.log('\\n');\r\n\r\n    return result;\r\n}\r\n\r\nexport default loggerMiddleware;","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\nimport loggerMiddleware from \"./lib/loggerMiddleware\";\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk, loggerMiddleware];\r\n\r\nconst store = createStore(rootReducer, initialState, compose(applyMiddleware(...middleware)));\r\n\r\nexport default store;\r\n\r\n/*\r\ncreateStore(reducer, [preloadedState], [enhancer])\r\ncompose to enhance a store with applyMiddleware and a few developer tools from the redux-devtools package.\r\n*/\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById(\"root\") as HTMLElement\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}