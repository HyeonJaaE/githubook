{"version":3,"sources":["actions/authAction.tsx","api/printDate.ts","Components/CommentBox/index.tsx","api/getGithubComment.ts","api/addGithubComment.ts","Components/Card/index.tsx","api/getGithubInfo.ts","api/getGithubEvent.ts","Components/Nav/index.tsx","Components/Githubook/index.tsx","api/getGithubFollow.ts","Components/Home/index.tsx","Components/Login/index.tsx","App.tsx","serviceWorker.ts","reducers/authReducers.tsx","reducers/errorReducers.tsx","actions/counterAction.tsx","reducers/counterReducers.tsx","reducers/index.tsx","lib/loggerMiddleware.tsx","store.tsx","index.tsx"],"names":["SET_USER","setCurrentUser","user","type","payload","printDate","s","bar","now","Date","foo","diff","getTime","hourDiff","Math","floor","minDiff","hour","getHours","min","getMinutes","isAm","getFullYear","getMonth","getDate","getDay","String","length","CommentBox","props","useState","info","setInfo","useEffect","comment","idx","className","map","i","style","width","height","borderRadius","src","avatar_url","backgroundColor","login","source","body","role","getGithubComment","url","token","axios","get","headers","Authorization","addGithubComment","commentBody","data","config","post","Card","auth","useSelector","state","setComment","dateA","e","created_at","dateB","handleComment","document","getElementById","classList","contains","toggle","then","res","comments_url","getGithubCommentURL","key","id","actor","infoBox","href","repo","name","ref","split","commits","c","sha","message","author","onClick","fontSize","onSubmit","preventDefault","target","value","console","log","placeholder","action","issue","description","pull_request","getGithubInfo","username","getGithubEvent","Nav","tagName","getElementsByClassName","handleEventType","parentElement","menubox","image","text","imgStyle","avatar","Githubook","sideToggle","setSideToggle","setData","following","setFollowing","events","setEvents","eventType","setEventType","eventList","push","Promise","rej","forEach","f","event","el","sort","a","b","v","html_url","repos_url","followers_url","following_url","md","gists_url","starred_url","handleEventList","Home","dispatch","useDispatch","window","location","search","code","client_id","client_secret","accept","access_token","localStorage","setItem","history","catch","err","Login","App","getItem","basename","process","exact","path","component","Boolean","hostname","match","initialState","INCREASE","DECREASE","count","rootReducer","combineReducers","counter","errors","loggerMiddleware","store","next","getState","result","middleware","thunk","createStore","compose","applyMiddleware","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.96d98dc7.chunk.js","sourcesContent":["// set logged in user\r\n\r\nexport type AuthTypes = ReturnType<typeof setCurrentUser>;\r\n\r\nexport const SET_USER = \"SET_CURRENT_USER\" as const;\r\n\r\nexport const setCurrentUser = (user: any) => ({\r\n    type: SET_USER,\r\n    payload: user,\r\n});\r\n","const printDate = (s:string) => {\r\n\r\n    let now = new Date(),\r\n        foo = new Date(s),\r\n        diff = now.getTime() - foo.getTime(),\r\n        hourDiff = Math.floor(diff/ 3600000),\r\n        minDiff = Math.floor(diff % 3600000 / 60000),\r\n        dayli = [\"일요일 \", \"월요일 \", \"화요일 \", \"수요일 \", \"목요일 \", \"금요일 \", \"토요일 \"],\r\n        hour = foo.getHours(),\r\n        min = foo.getMinutes(),\r\n        isAm = true,\r\n        bar = [];\r\n    \r\n    if( hour > 12 ){ \r\n        isAm = false;\r\n        hour -= 12;\r\n    }\r\n    \r\n    // [년, 월, 일, 요일, 시간, :, 분]\r\n    bar = [foo.getFullYear() + \"년 \", foo.getMonth() + 1 + \"월 \", foo.getDate() + \"일 \", dayli[foo.getDay()], isAm ? \"오전 \" : \"오후 \", String(hour).length === 1 ? \"0\" + hour : hour , \":\",  min < 10 ? \"0\"+min : min];\r\n\r\n    return diff > 86400000 ? [bar] : (hourDiff > 0 ? [bar, hourDiff + \"시간 전\"] : [bar, minDiff + \"분 전\"]);\r\n}\r\n\r\nexport default printDate;","import React, { useState, useEffect } from \"react\";\r\nimport ReactMarkdown from \"react-markdown\";\r\n\r\nconst CommentBox = (props: any) => {\r\n    const [info, setInfo] = useState<any[]>();\r\n\r\n    useEffect(() => {\r\n        if (props.comment[props.idx]) {\r\n            setInfo(props.comment[props.idx]);\r\n        }\r\n    });\r\n\r\n    return (\r\n        <div className=\"my-4\">\r\n            {info ? (\r\n                info.length > 0 ? (\r\n                    info.map((i) => (\r\n                        <div className=\"my-2 d-flex\">\r\n                            <img\r\n                                style={{ width: \"30px\", height: \"30px\", borderRadius: \"50%\" }}\r\n                                src={i.user.avatar_url}\r\n                            />\r\n                            <div\r\n                                className=\"mx-3 p-2\"\r\n                                style={{ borderRadius: \"15px\", backgroundColor: \"#F0F2F5\" }}\r\n                            >\r\n                                <h6>{i.user.login}</h6>\r\n                                <ReactMarkdown source={i.body} />\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                ) : (\r\n                    <div>댓글이 없습니다</div>\r\n                )\r\n            ) : (\r\n                <div className=\"d-flex justify-content-center\">\r\n                    <div className=\"spinner-border\" role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CommentBox;\r\n","import axios from \"axios\";\r\n\r\n\r\nexport const getGithubCommentURL = (url: string, token: string) => {\r\n    return axios.get(url, {\r\n        headers: {\r\n            Authorization: `token ${token}`,\r\n          },\r\n    }).then( res => \r\n        getGithubComment(res.data.comments_url, token)\r\n    )\r\n}\r\n\r\nexport const getGithubComment = (url: any, token: string) => {\r\n    return  axios.get<any[]>( url,  {\r\n                headers: {\r\n                    Authorization: `token ${token}`,\r\n                },\r\n            })\r\n}\r\n","import axios from \"axios\";\r\n\r\nexport const addGithubComment = (url: any, commentBody:string, token: string) => {\r\n    const data = {\r\n        body: commentBody\r\n    }\r\n    const config = {\r\n        headers: { Authorization: `token ${token}`}\r\n    }\r\n\r\n    return axios.post(url, data, config);\r\n}\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport printDate from \"../../api/printDate\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport { infoBox } from \"../Githubook\";\r\nimport CommentBox from \"../CommentBox\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getGithubCommentURL, getGithubComment } from \"../../api/getGithubComment\";\r\nimport { addGithubComment } from \"../../api/addGithubComment\";\r\n\r\nconst Card = (props: any) => {\r\n    const auth = useSelector((state: any) => state.auth);\r\n    const [comment, setComment] = useState({});\r\n\r\n    let dateA = printDate(props.e.created_at),\r\n        dateB = [dateA[0][1], dateA[0][2], dateA[0][4], dateA[0][5], dateA[0][6], dateA[0][7]];\r\n\r\n    const handleComment = (url: string, idx: string) => {\r\n        let foo = document.getElementById(idx);\r\n        if (foo?.classList.contains(\"acitve\")) {\r\n            foo?.classList.toggle(\"active\");\r\n        } else {\r\n            foo?.classList.toggle(\"active\");\r\n            if (props.e.type === \"PushEvent\") {\r\n                getGithubCommentURL(url, auth.user).then((res) =>\r\n                    setComment({ ...comment, [idx]: [...res.data] })\r\n                );\r\n            } else {\r\n                getGithubComment(url, auth.user).then((res) =>\r\n                    setComment({ ...comment, [idx]: [...res.data] })\r\n                );\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div key={props.e.id} className=\"githubook-card\">\r\n            <div className=\"githubook-card-title\">\r\n                <div>\r\n                    <span className=\"githubook-card-info\">\r\n                        <img\r\n                            src={props.e.actor.avatar_url}\r\n                            style={{ height: \"40px\", width: \"40px\" }}\r\n                        ></img>\r\n                        {infoBox(props.e.actor.avatar_url, props.e.actor.login)}\r\n                    </span>\r\n                </div>\r\n                <div>\r\n                    <div className=\"mb-0\">\r\n                        <span className=\"githubook-card-info\">\r\n                            {props.e.actor.login} &gt;&nbsp;{\" \"}\r\n                            {infoBox(props.e.actor.avatar_url, props.e.actor.login)}\r\n                        </span>\r\n\r\n                        <a href={\"https://github.com/\" + props.e.repo.name}>{props.e.repo.name}</a>\r\n                    </div>\r\n                    <div className=\"mb-0 githubook-card-date\">\r\n                        {dateA[1] ? dateA[1] : dateB}\r\n                        <span className=\"githubook-card-date-tooltips\">{dateA[0]}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"githubook-card-main\">\r\n                {props.e.type === \"PushEvent\" && (\r\n                    <>\r\n                        Commits\r\n                        <p className=\"lead\">- {props.e.payload.ref?.split(\"/\")[2]} branch</p>\r\n                        <hr />\r\n                        {props.e.payload.commits.map((c: any) => (\r\n                            <div key={c.sha}>\r\n                                <div className=\"py-3\">\r\n                                    <ReactMarkdown source={c.message} />\r\n                                    <p className=\"lead\">comitted by {c.author.name}</p>\r\n                                </div>\r\n                                <hr />\r\n                                <div className=\"\">\r\n                                    <a\r\n                                        onClick={() => handleComment(c.url, c.sha)}\r\n                                        style={{ fontSize: \"12px\" }}\r\n                                    >\r\n                                        댓글\r\n                                    </a>\r\n                                    <div className=\"githubook-card-comment\" id={c.sha}>\r\n                                        {comment && <CommentBox comment={comment} idx={c.sha} />}\r\n                                        <div className=\"\">\r\n                                            <form\r\n                                                onSubmit={(e: any) => {\r\n                                                    e.preventDefault();\r\n                                                    addGithubComment(\r\n                                                        c.url + \"/comments\",\r\n                                                        e.target.commentBody.value,\r\n                                                        auth.user\r\n                                                    ).then((res) => console.log(res));\r\n                                                    handleComment(c.url, c.sha);\r\n                                                }}\r\n                                            >\r\n                                                <img\r\n                                                    style={{\r\n                                                        width: \"30px\",\r\n                                                        height: \"30px\",\r\n                                                        borderRadius: \"50%\",\r\n                                                    }}\r\n                                                    src={props.data.avatar_url}\r\n                                                />\r\n                                                <input\r\n                                                    id=\"commentBody\"\r\n                                                    type=\"text\"\r\n                                                    placeholder=\"댓글\"\r\n                                                ></input>\r\n                                            </form>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <hr />\r\n                            </div>\r\n                        ))}\r\n                    </>\r\n                )}\r\n                {props.e.type === \"IssuesEvent\" && (\r\n                    <>\r\n                        Issues - {props.e.payload.action}\r\n                        <hr />\r\n                        <div className=\"py-3\">\r\n                            <ReactMarkdown source={props.e.payload.issue?.body} />\r\n                        </div>\r\n                        <hr />\r\n                        <div className=\"\">\r\n                            <a\r\n                                onClick={() =>\r\n                                    handleComment(props.e.payload.issue.comments_url, props.e.id)\r\n                                }\r\n                                style={{ fontSize: \"12px\" }}\r\n                            >\r\n                                댓글\r\n                            </a>\r\n                            <div className=\"githubook-card-comment\" id={props.e.id}>\r\n                                {comment && <CommentBox comment={comment} idx={props.e.id} />}\r\n                                <div className=\"\">\r\n                                    <form\r\n                                        onSubmit={(e: any) => {\r\n                                            e.preventDefault();\r\n                                            addGithubComment(\r\n                                                props.e.payload.issue.comments_url,\r\n                                                e.target.commentBody.value,\r\n                                                auth.user\r\n                                            ).then((res) => console.log(res));\r\n                                        }}\r\n                                    >\r\n                                        <img\r\n                                            style={{\r\n                                                width: \"30px\",\r\n                                                height: \"30px\",\r\n                                                borderRadius: \"50%\",\r\n                                            }}\r\n                                            src={props.data.avatar_url}\r\n                                        />\r\n                                        <input\r\n                                            id=\"commentBody\"\r\n                                            type=\"text\"\r\n                                            placeholder=\"댓글\"\r\n                                        ></input>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <hr />\r\n                    </>\r\n                )}\r\n                {props.e.type === \"PullRequestEvent\" && (\r\n                    <>\r\n                        PullRequest\r\n                        <hr />\r\n                        <div className=\"py-3\">\r\n                            <ReactMarkdown source={props.e.payload.description} />\r\n                        </div>\r\n                        <hr />\r\n                        <div>\r\n                            <a\r\n                                onClick={() =>\r\n                                    handleComment(\r\n                                        props.e.payload.pull_request.comments_url,\r\n                                        props.e.id\r\n                                    )\r\n                                }\r\n                                style={{ fontSize: \"12px\" }}\r\n                            >\r\n                                댓글\r\n                            </a>\r\n                            <div className=\"githubook-card-comment\" id={props.e.id}>\r\n                                {comment && <CommentBox comment={comment} idx={props.e.id} />}\r\n                            </div>\r\n                        </div>\r\n                        <hr />\r\n                    </>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Card;\r\n","import axios from \"axios\";\r\n\r\nconst getGithubInfo =  (username: string| null ) => {\r\n    /*const response = await axios.get<GithubProfile>(\r\n        `https://api.github.com/users/${username}`\r\n    );*/\r\n\r\n    return axios.get<GithubProfile>(\r\n        `https://api.github.com/user` ,  {\r\n            headers: {\r\n              Authorization: `token ${username}`,\r\n            },\r\n          }\r\n    );\r\n}\r\n\r\nexport interface GithubProfile {\r\n    login?: string;\r\n    id?: number;\r\n    node_id?: string;\r\n    avatar_url?: string;\r\n    gravatar_id?: string;\r\n    url?: string;\r\n    html_url?: string;\r\n    followers_url?: string;\r\n    following_url?: string;\r\n    gists_url?: string;\r\n    starred_url?: string;\r\n    subscriptions_url?: string;\r\n    organizations_url?: string;\r\n    repos_url?: string;\r\n    events_url?: string;\r\n    received_events_url?: string;\r\n    type?: string;\r\n    site_admin?: boolean;\r\n    name?: string;\r\n    company?: string;\r\n    blog?: string;\r\n    location?: null;\r\n    email?: null;\r\n    hireable?: null;\r\n    bio?: string;\r\n    public_repos?: number;\r\n    public_gists?: number;\r\n    followers?: number;\r\n    following?: number;\r\n    created_at?: Date;\r\n    updated_at?: Date;\r\n}\r\n\r\n\r\nexport default getGithubInfo;","import axios from \"axios\";\r\n\r\nexport const getGithubEvent = (username: string| undefined, token: string) => {\r\n    /*return axios.get<GithubEvent[]>(\r\n        `https://api.github.com/events` ,  {\r\n            headers: {\r\n              Authorization: `token ${username}`,\r\n            },\r\n          }\r\n    )*/\r\n    \r\n    return axios.get<GithubEvent[]>(\r\n        `https://api.github.com/users/${username}/events`,  {\r\n            headers: {\r\n              Authorization: `token ${token}`,\r\n            },\r\n          }\r\n    )\r\n}\r\n\r\nexport interface GithubEvent {\r\n    id: string,\r\n    type: string,\r\n    actor: {\r\n        id: number,\r\n        login: string,\r\n        display_login: string,\r\n        gravatar_id: string,\r\n        url: string,\r\n        avatar_url: string\r\n    },\r\n    repo: {\r\n        id: number,\r\n        name: string,\r\n        url: string\r\n    },\r\n    payload: {\r\n        push_id: number,\r\n        size: number,\r\n        distinct_size: number,\r\n        ref: string,\r\n        head: string\r\n        before: string\r\n        commits: [\r\n        {\r\n            sha: string,\r\n            author: {\r\n            email: string,\r\n            name: string\r\n            },\r\n            message: string,\r\n            distinct: true,\r\n            url: string\r\n        }\r\n        ]\r\n    },\r\n    public: true,\r\n    created_at: string\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport getGithubInfo, { GithubProfile } from \"../../api/getGithubInfo\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setCurrentUser } from \"../../actions/authAction\";\r\n\r\nconst Nav = (props: any) => {\r\n    return (\r\n        <div id=\"githubook-nav\">\r\n            <div id=\"githubook-nav-side-l\">\r\n                <img\r\n                    src=\"https://img.icons8.com/cotton/40/000000/cat--v3.png\"\r\n                    style={{ width: \"35px\", height: \"35px\" }}\r\n                ></img>\r\n                {/*\r\n                \r\n                <div id=\"githubook-search\">\r\n                    <label htmlFor=\"q\">\r\n                        <div id=\"q-icon\"></div>\r\n                        <input\r\n                            id=\"q\"\r\n                            type=\"search\"\r\n                            placeholder=\"github Id\"\r\n                            onKeyPress={async (e: any) => {\r\n                                if (e.key === \"Enter\" && e.target.value !== \"\") {\r\n                                    localStorage.setItem(\"token\", e.target.value);\r\n                                    window.location.reload();\r\n                                }\r\n                            }}\r\n                        ></input>\r\n                    </label>\r\n                </div>\r\n                */}\r\n            </div>\r\n            <div id=\"githubook-nav-main\">\r\n                <ul\r\n                    onClick={(e: any) => {\r\n                        if (e.target.tagName !== \"UL\")\r\n                            document.getElementsByClassName(\"active\")[0].classList.toggle(\"active\");\r\n                        if (e.target.tagName === \"IMG\") {\r\n                            props.handleEventType(e.target.parentElement.id);\r\n                            e.target.parentElement.classList.toggle(\"active\");\r\n                        }\r\n                        if (e.target.tagName === \"LI\") {\r\n                            props.handleEventType(e.target.id);\r\n                            e.target.classList.toggle(\"active\");\r\n                        }\r\n                    }}\r\n                    id=\"githubook-nav-main-ul\"\r\n                    className=\"githubook-nav-main-ul\"\r\n                >\r\n                    <li id=\"All\" className=\"githubook-card-date active\">\r\n                        <img src=\"https://img.icons8.com/android/24/000000/home.png\" />\r\n                        <span className=\"githubook-card-date-tooltips\">{\"All Events\"}</span>\r\n                    </li>\r\n                    <li id=\"PushEvent\" className=\"githubook-card-date\">\r\n                        <img src=\"https://img.icons8.com/ios/40/000000/commit-git.png\" />\r\n                        <span className=\"githubook-card-date-tooltips\">{\"Commits\"}</span>\r\n                    </li>\r\n                    <li id=\"PullRequestEvent\" className=\"githubook-card-date\">\r\n                        <img src=\"https://img.icons8.com/ios/24/000000/pull-request.png\" />\r\n                        <span className=\"githubook-card-date-tooltips\">{\"Pull Requests\"}</span>\r\n                    </li>\r\n                    <li id=\"IssuesEvent\" className=\"githubook-card-date\">\r\n                        <img src=\"https://img.icons8.com/ios/100/000000/exclamation-mark.png\" />\r\n                        <span className=\"githubook-card-date-tooltips\">{\"Issues\"}</span>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            <div id=\"githubook-nav-side-r\">\r\n                <img\r\n                    className=\"mr-2\"\r\n                    src={props.data.avatar_url}\r\n                    style={{ width: \"30px\", height: \"30px\", borderRadius: \"50%\" }}\r\n                ></img>\r\n                <span className=\"mr-4\">{props.data.login}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Nav;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport Card from \"../Card\";\r\nimport getGithubInfo, { GithubProfile } from \"../../api/getGithubInfo\";\r\nimport { getGithubFollower, getGithubFollowing, GithubFollow } from \"../../api/getGithubFollow\";\r\nimport { getGithubEvent, GithubEvent } from \"../../api/getGithubEvent\";\r\n\r\nimport Nav from \"../Nav\";\r\nimport \"./githubook.scss\";\r\n\r\nconst menubox = (image: string, text: string, imgStyle: string) => {\r\n    return (\r\n        <div className=\"githubook-menubox\">\r\n            <div className=\"githubook-menubox-icon\">\r\n                <img className={imgStyle} src={image}></img>\r\n            </div>\r\n            <div className=\"githubook-menubox-text\">\r\n                <span>{text}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const infoBox = (avatar: string, name: string) => {\r\n    return (\r\n        <div className=\"githubook-card-info-box\">\r\n            <div>\r\n                <img src={avatar} style={{ height: \"60px\", width: \"60px\" }}></img>\r\n                {name}\r\n            </div>\r\n            <div className=\"mt-3\">\r\n                <a href={\"https://github.com/\" + name}>깃허브 - https://github.com/{name}</a>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Githubook = () => {\r\n    const auth = useSelector((state: any) => state.auth);\r\n\r\n    const [sideToggle, setSideToggle] = useState(false);\r\n    const [data, setData] = useState<GithubProfile | null>();\r\n    const [following, setFollowing] = useState<GithubFollow[]>([]);\r\n    const [events, setEvents] = useState<GithubEvent[]>([]);\r\n    const [eventType, setEventType] = useState(\"All\");\r\n\r\n    useEffect(() => {\r\n        getGithubInfo(auth.user).then((info) => {\r\n            let eventList: any = [],\r\n                idx = 0;\r\n\r\n            setData(info.data);\r\n\r\n            getGithubEvent(info.data.login, auth.user).then((e) => {\r\n                eventList.push(...e.data);\r\n            });\r\n\r\n            getGithubFollowing(auth.user).then((following) => {\r\n                setFollowing(following.data);\r\n\r\n                let getFollowingEvent = () => {\r\n                    return new Promise((res, rej) => {\r\n                        following.data.forEach((f: any, i: number) => {\r\n                            getGithubEvent(f.login, auth.user).then((event) => {\r\n                                eventList.push(...event.data);\r\n                                idx += 1;\r\n                                if (idx === following.data.length) res(eventList);\r\n                            });\r\n                        });\r\n                    });\r\n                };\r\n\r\n                getFollowingEvent().then((el: any) => {\r\n                    el.sort((a: any, b: any) => {\r\n                        var foo = new Date(a.created_at),\r\n                            bar = new Date(b.created_at);\r\n                        return foo > bar ? -1 : 1;\r\n                    });\r\n                    setEvents(el);\r\n                    console.log(el);\r\n                });\r\n            });\r\n        });\r\n    }, []);\r\n\r\n    const handleEventList = (e: GithubEvent) => {\r\n        if (eventType === \"All\") {\r\n            if (e.type === \"PushEvent\" || e.type === \"PullRequestEvent\" || e.type === \"IssuesEvent\")\r\n                return <Card e={e} data={data} />;\r\n        } else {\r\n            return e.type === eventType && <Card e={e} data={data} />;\r\n        }\r\n    };\r\n\r\n    const handleEventType = (v: any) => {\r\n        setEventType(v);\r\n    };\r\n\r\n    return (\r\n        <div id=\"githubook-container\">\r\n            {data && (\r\n                <>\r\n                    <Nav data={data} handleEventType={handleEventType} />\r\n                    <div id=\"githubook-body\">\r\n                        <div id=\"githubook-side-l\">\r\n                            {[\r\n                                [data.avatar_url, data.login, \"circle\", \"/githubook\"],\r\n                                [\r\n                                    \"https://img.icons8.com/fluent/48/000000/github.png\",\r\n                                    \"깃허브\",\r\n                                    \"square\",\r\n                                    data.html_url,\r\n                                ],\r\n                                [\r\n                                    \"https://img.icons8.com/dotty/50/000000/repository.png\",\r\n                                    \"저장소\",\r\n                                    \"square\",\r\n                                    data.repos_url,\r\n                                ],\r\n                                [\r\n                                    \"https://img.icons8.com/ios-glyphs/50/000000/pet-commands-follow.png\",\r\n                                    \"팔로워\",\r\n                                    \"square\",\r\n                                    data.followers_url,\r\n                                ],\r\n                                [\r\n                                    \"https://img.icons8.com/doodle/48/000000/follow--v1.png\",\r\n                                    \"팔로잉\",\r\n                                    \"square\",\r\n                                    data.following_url,\r\n                                ],\r\n                            ].map((md: any, i) => (\r\n                                <a key={i} href={md[3]}>\r\n                                    {menubox(md[0], md[1], md[2])}\r\n                                </a>\r\n                            ))}\r\n                            {sideToggle ? (\r\n                                <>\r\n                                    {[\r\n                                        [\r\n                                            \"https://img.icons8.com/bubbles/48/000000/list.png\",\r\n                                            \"Gist\",\r\n                                            \"square\",\r\n                                            data.gists_url,\r\n                                        ],\r\n                                        [\r\n                                            \"https://img.icons8.com/cotton/64/000000/star.png\",\r\n                                            \"Star\",\r\n                                            \"square\",\r\n                                            data.starred_url,\r\n                                        ],\r\n                                    ].map((md: any) => (\r\n                                        <a href={md[3]}>{menubox(md[0], md[1], md[2])}</a>\r\n                                    ))}\r\n                                    <div onClick={() => setSideToggle(sideToggle ? false : true)}>\r\n                                        {menubox(\r\n                                            \"https://img.icons8.com/windows/64/000000/minus.png\",\r\n                                            \"간략하게 보기\",\r\n                                            \"square\"\r\n                                        )}\r\n                                    </div>\r\n                                </>\r\n                            ) : (\r\n                                <>\r\n                                    <div onClick={() => setSideToggle(sideToggle ? false : true)}>\r\n                                        {menubox(\r\n                                            \"https://img.icons8.com/windows/48/000000/plus.png\",\r\n                                            \"더보기\",\r\n                                            \"square\"\r\n                                        )}\r\n                                    </div>\r\n                                </>\r\n                            )}\r\n                        </div>\r\n\r\n                        <div id=\"githubook-main\">{events.map((e) => handleEventList(e))}</div>\r\n                        <div id=\"githubook-side-r\">\r\n                            <div className=\"madeinfo\">\r\n                                <h1>Made By</h1>\r\n                                <div className=\"madeinfo-content\">\r\n                                    <a href=\"https://github.com/hyeonjaae/githubook\">\r\n                                        {menubox(\r\n                                            \"https://avatars0.githubusercontent.com/u/34333474?v=4\",\r\n                                            \"HyeonJaae\",\r\n                                            \"circle\"\r\n                                        )}\r\n                                    </a>\r\n                                </div>\r\n                                <hr />\r\n                            </div>\r\n                            <div className=\"following\">\r\n                                <h1>Following</h1>\r\n                                <div className=\"following-content\">\r\n                                    {following.map((f, i) => (\r\n                                        <div key={i} className=\"\">\r\n                                            <a>{menubox(f.avatar_url, f.login, \"circle\")}</a>\r\n                                            {infoBox(f.avatar_url, f.login)}\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Githubook;\r\n","import axios from \"axios\";\r\n\r\nexport const getGithubFollower = (username: string| null) => {\r\n    return axios.get<GithubFollow[]>(\r\n        `https://api.github.com/users/${username}/followers`\r\n    );\r\n}\r\n\r\nexport const getGithubFollowing = (username: string| null) => {\r\n    return axios.get(`https://api.github.com/user/following`, {\r\n        headers: {\r\n          Authorization: `token ${username}`,\r\n        },\r\n      })\r\n    /*return axios.get<GithubFollow[]>(\r\n        `https://api.github.com/users/${username}/following`\r\n    );*/\r\n}\r\n\r\nexport interface GithubFollow {\r\n    login: string,\r\n    id: number,\r\n    node_id: string,\r\n    avatar_url: string,\r\n    gravatar_id: string,\r\n    url: string,\r\n    html_url: string,\r\n    followers_url: string,\r\n    following_url: string,\r\n    gists_url: string,\r\n    starred_url: string,\r\n    subscriptions_url: string,\r\n    organizations_url: string,\r\n    repos_url: string,\r\n    events_url: string,\r\n    received_events_url: string,\r\n    type: string,\r\n    site_admin: false\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\n\r\nimport { setCurrentUser } from \"../../actions/authAction\";\r\nimport Githubook from \"../Githubook\";\r\nimport \"./home.scss\";\r\n\r\nconst Home = (props: any) => {\r\n    const dispatch = useDispatch();\r\n    const auth = useSelector((state: any) => state.auth);\r\n\r\n    useEffect(() => {\r\n        let access_token = window.location.search.split(\"=\")[1];\r\n        if (access_token) {\r\n            axios\r\n                .post(\r\n                    \"https://cors-anywhere.herokuapp.com/https://github.com/login/oauth/access_token\",\r\n                    {\r\n                        code: window.location.search.split(\"=\")[1],\r\n                        client_id: \"504c566c0230964f360d\",\r\n                        client_secret: \"e6821d09a158291b5704634c2f49052d50a6e278\",\r\n                    },\r\n                    {\r\n                        headers: {\r\n                            accept: \"application/json\",\r\n                        },\r\n                    }\r\n                )\r\n                .then((res) => {\r\n                    console.log(res);\r\n                    dispatch(setCurrentUser(res.data.access_token));\r\n                    localStorage.setItem(\"token\", res.data.access_token);\r\n                    props.history.push(\"/\");\r\n                })\r\n                .catch((err) => console.log(err));\r\n        }\r\n    }, []);\r\n    return (\r\n        <>\r\n            {auth.user ? (\r\n                <Githubook />\r\n            ) : (\r\n                <div id=\"home-container\">\r\n                    {/*<a href=\"https://github.com/login/oauth/authorize?client_id=504c566c0230964f360d&redirect_uri=http://localhost:3000\">\r\n                        dev\r\n                    </a>*/}\r\n                    <a href=\"https://github.com/login/oauth/authorize?client_id=504c566c0230964f360d&redirect_uri=https://hyeonjaae.github.io/githubook\">\r\n                        <img\r\n                            src=\"https://d2eip9sf3oo6c2.cloudfront.net/tags/images/000/000/276/square_480/github_logo.png\"\r\n                            style={{ width: \"40px\", height: \"40px\" }}\r\n                        ></img>\r\n                        <img\r\n                            src=\"https://en.followersnet.com/wp-content/uploads/2016/02/Facebook-1.png\"\r\n                            style={{ width: \"60px\", height: \"60px\" }}\r\n                        ></img>\r\n                    </a>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setCurrentUser } from \"../../actions/authAction\";\r\nimport axios from \"axios\";\r\n\r\nconst Login = (props: any) => {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .post(\r\n                \"https://cors-anywhere.herokuapp.com/https://github.com/login/oauth/access_token\",\r\n                {\r\n                    code: window.location.search.split(\"=\")[1],\r\n                    client_id: \"504c566c0230964f360d\",\r\n                    client_secret: \"e6821d09a158291b5704634c2f49052d50a6e278\",\r\n                },\r\n                {\r\n                    headers: {\r\n                        accept: \"application/json\",\r\n                    },\r\n                }\r\n            )\r\n            .then((res) => {\r\n                console.log(res);\r\n                dispatch(setCurrentUser(res.data.access_token));\r\n                props.history.push(\"/\");\r\n            })\r\n            .catch((err) => console.log(err));\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"text-center\">\r\n            <div className=\"spinner-border\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\nimport { Route, BrowserRouter as Router } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { setCurrentUser } from \"./actions/authAction\";\nimport Home from \"./Components/Home\";\nimport Login from \"./Components/Login\";\n\nconst App = () => {\n    const dispatch = useDispatch();\n    dispatch(setCurrentUser(localStorage.getItem(\"token\")));\n    return (\n        <Router basename={process.env.PUBLIC_URL}>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/login\" component={Login} />\n        </Router>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { AuthTypes, SET_USER } from \"../actions/authAction\";\r\n\r\ntype AuthState = {\r\n    user: object;\r\n};\r\n\r\nconst initialState: AuthState = {\r\n    user: {},\r\n};\r\n\r\nexport default (state = initialState, action: AuthTypes) => {\r\n    switch (action.type) {\r\n        case SET_USER:\r\n            return {\r\n                user: action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","const initialState = {};\r\n\r\nexport default function (state = initialState, action : any) {\r\n    switch (action.type) {\r\n        case \"GET_ERRORS\":\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","export type CountTypes =\r\n    | ReturnType<typeof increase>\r\n    | ReturnType<typeof decrease>\r\n    | ReturnType<typeof increaseBy>;\r\n\r\nexport const INCREASE = \"counter/INCREASE\" as const;\r\nexport const DECREASE = \"counter/DECREASE\" as const;\r\nexport const INCREASE_BY = \"counter/INCREASE_BY\" as const;\r\n\r\nexport const increase = () => ({ type: INCREASE });\r\nexport const decrease = () => ({ type: DECREASE });\r\nexport const increaseBy = (diff: number) => ({\r\n    type: INCREASE_BY,\r\n    payload: diff,\r\n});\r\n","import { CountTypes, INCREASE, DECREASE, INCREASE_BY } from \"../actions/counterAction\";\r\n\r\ntype CounterState = {\r\n    count: number;\r\n};\r\n\r\nconst initialState: CounterState = {\r\n    count: 0,\r\n};\r\n\r\nexport default (state: CounterState = initialState, action: CountTypes) => {\r\n    switch (action.type) {\r\n        case INCREASE:\r\n            return {\r\n                count: state.count + 1,\r\n            };\r\n        case DECREASE:\r\n            return {\r\n                count: state.count - 1,\r\n            };\r\n        case INCREASE_BY:\r\n            return {\r\n                count: state.count + action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport authReducer from \"../reducers/authReducers\";\r\nimport errorReducer from \"../reducers/errorReducers\";\r\nimport countReducer from \"./counterReducers\";\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    counter: countReducer,\r\n    errors: errorReducer,\r\n});\r\nexport default rootReducer;\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n","const loggerMiddleware = (store:any) => (next:any) => (action:any) => {\r\n    \r\n    console.log(\"current state\", store.getState());\r\n    console.log('action', action);\r\n\r\n    //액션을 다음 미들웨어, 혹은 리듀서로 전달\r\n    const result = next(action);\r\n    \r\n    console.log(\"next state\", store.getState());\r\n    console.log('\\n');\r\n\r\n    return result;\r\n}\r\n\r\nexport default loggerMiddleware;","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\nimport loggerMiddleware from \"./lib/loggerMiddleware\";\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk, loggerMiddleware];\r\n\r\nconst store = createStore(rootReducer, initialState, compose(applyMiddleware(...middleware)));\r\n\r\nexport default store;\r\n\r\n/*\r\ncreateStore(reducer, [preloadedState], [enhancer])\r\ncompose to enhance a store with applyMiddleware and a few developer tools from the redux-devtools package.\r\n*/\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById(\"root\") as HTMLElement\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}