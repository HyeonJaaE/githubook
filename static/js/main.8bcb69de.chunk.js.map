{"version":3,"sources":["actions/authAction.tsx","api/getGithubInfo.ts","api/getGithubEvent.ts","api/printDate.ts","Components/Nav/index.tsx","Components/Githubook/index.tsx","api/getGithubFollow.ts","Components/Home/index.tsx","Components/Login/index.tsx","App.tsx","serviceWorker.ts","reducers/authReducers.tsx","reducers/errorReducers.tsx","actions/counterAction.tsx","reducers/counterReducers.tsx","reducers/index.tsx","lib/loggerMiddleware.tsx","store.tsx","index.tsx"],"names":["SET_USER","setCurrentUser","user","type","payload","getGithubInfo","username","axios","get","headers","Authorization","getGithubEvent","token","printDate","s","bar","now","Date","foo","diff","getTime","hourDiff","Math","floor","minDiff","hour","getHours","min","getMinutes","isAm","getFullYear","getMonth","getDate","getDay","String","length","Nav","props","id","src","style","width","height","onClick","e","target","tagName","document","getElementsByClassName","classList","toggle","handleEventType","parentElement","className","data","avatar_url","borderRadius","login","menubox","image","text","imgStyle","infoBox","avatar","name","href","card","idx","dateA","created_at","dateB","console","log","issue","key","actor","repo","commits","message","JSON","stringify","body","split","Githubook","auth","useSelector","state","useState","sideToggle","setSideToggle","setData","following","setFollowing","events","setEvents","eventType","setEventType","useEffect","then","info","eventList","push","Promise","res","rej","forEach","f","i","event","el","sort","a","b","v","html_url","repos_url","followers_url","following_url","map","md","gists_url","starred_url","Home","dispatch","useDispatch","window","location","search","post","code","client_id","client_secret","accept","access_token","localStorage","setItem","history","catch","err","Login","role","App","getItem","basename","process","exact","path","component","Boolean","hostname","match","initialState","INCREASE","DECREASE","count","rootReducer","combineReducers","action","counter","errors","loggerMiddleware","store","next","getState","result","middleware","thunk","createStore","compose","applyMiddleware","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.8bcb69de.chunk.js","sourcesContent":["// set logged in user\r\n\r\nexport type AuthTypes = ReturnType<typeof setCurrentUser>;\r\n\r\nexport const SET_USER = \"SET_CURRENT_USER\" as const;\r\n\r\nexport const setCurrentUser = (user: any) => ({\r\n    type: SET_USER,\r\n    payload: user,\r\n});\r\n","import axios from \"axios\";\r\n\r\nconst getGithubInfo =  (username: string| null ) => {\r\n    /*const response = await axios.get<GithubProfile>(\r\n        `https://api.github.com/users/${username}`\r\n    );*/\r\n\r\n    return axios.get<GithubProfile>(\r\n        `https://api.github.com/user` ,  {\r\n            headers: {\r\n              Authorization: `token ${username}`,\r\n            },\r\n          }\r\n    );\r\n}\r\n\r\nexport interface GithubProfile {\r\n    login?: string;\r\n    id?: number;\r\n    node_id?: string;\r\n    avatar_url?: string;\r\n    gravatar_id?: string;\r\n    url?: string;\r\n    html_url?: string;\r\n    followers_url?: string;\r\n    following_url?: string;\r\n    gists_url?: string;\r\n    starred_url?: string;\r\n    subscriptions_url?: string;\r\n    organizations_url?: string;\r\n    repos_url?: string;\r\n    events_url?: string;\r\n    received_events_url?: string;\r\n    type?: string;\r\n    site_admin?: boolean;\r\n    name?: string;\r\n    company?: string;\r\n    blog?: string;\r\n    location?: null;\r\n    email?: null;\r\n    hireable?: null;\r\n    bio?: string;\r\n    public_repos?: number;\r\n    public_gists?: number;\r\n    followers?: number;\r\n    following?: number;\r\n    created_at?: Date;\r\n    updated_at?: Date;\r\n}\r\n\r\n\r\nexport default getGithubInfo;","import axios from \"axios\";\r\n\r\nexport const getGithubEvent = (username: string| undefined, token: string) => {\r\n    /*return axios.get<GithubEvent[]>(\r\n        `https://api.github.com/events` ,  {\r\n            headers: {\r\n              Authorization: `token ${username}`,\r\n            },\r\n          }\r\n    )*/\r\n    \r\n    return axios.get<GithubEvent[]>(\r\n        `https://api.github.com/users/${username}/events`,  {\r\n            headers: {\r\n              Authorization: `token ${token}`,\r\n            },\r\n          }\r\n    )\r\n}\r\n\r\nexport interface GithubEvent {\r\n    id: string,\r\n    type: string,\r\n    actor: {\r\n        id: number,\r\n        login: string,\r\n        display_login: string,\r\n        gravatar_id: string,\r\n        url: string,\r\n        avatar_url: string\r\n    },\r\n    repo: {\r\n        id: number,\r\n        name: string,\r\n        url: string\r\n    },\r\n    payload: {\r\n        push_id: number,\r\n        size: number,\r\n        distinct_size: number,\r\n        ref: string,\r\n        head: string\r\n        before: string\r\n        commits: [\r\n        {\r\n            sha: string,\r\n            author: {\r\n            email: string,\r\n            name: string\r\n            },\r\n            message: string,\r\n            distinct: true,\r\n            url: string\r\n        }\r\n        ]\r\n    },\r\n    public: true,\r\n    created_at: string\r\n}","const printDate = (s:string) => {\r\n\r\n    let now = new Date(),\r\n        foo = new Date(s),\r\n        diff = now.getTime() - foo.getTime(),\r\n        hourDiff = Math.floor(diff/ 3600000),\r\n        minDiff = Math.floor(diff % 3600000 / 60000),\r\n        dayli = [\"일요일 \", \"월요일 \", \"화요일 \", \"수요일 \", \"목요일 \", \"금요일 \", \"토요일 \"],\r\n        hour = foo.getHours(),\r\n        min = foo.getMinutes(),\r\n        isAm = true,\r\n        bar = [];\r\n    \r\n    if( hour > 12 ){ \r\n        isAm = false;\r\n        hour -= 12;\r\n    }\r\n    \r\n    // [년, 월, 일, 요일, 시간, :, 분]\r\n    bar = [foo.getFullYear() + \"년 \", foo.getMonth() + 1 + \"월 \", foo.getDate() + \"일 \", dayli[foo.getDay()], isAm ? \"오전 \" : \"오후 \", String(hour).length === 1 ? \"0\" + hour : hour , \":\",  min < 10 ? \"0\"+min : min];\r\n\r\n    return diff > 86400000 ? [bar] : (hourDiff > 0 ? [bar, hourDiff + \"시간 전\"] : [bar, minDiff + \"분 전\"]);\r\n}\r\n\r\nexport default printDate;","import React, { useState, useEffect } from \"react\";\r\nimport getGithubInfo, { GithubProfile } from \"../../api/getGithubInfo\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setCurrentUser } from \"../../actions/authAction\";\r\n\r\nconst Nav = (props: any) => {\r\n    return (\r\n        <div id=\"githubook-nav\">\r\n            <div id=\"githubook-nav-side-l\">\r\n                <img\r\n                    src=\"https://img.icons8.com/cotton/40/000000/cat--v3.png\"\r\n                    style={{ width: \"35px\", height: \"35px\" }}\r\n                ></img>\r\n                {/*\r\n                \r\n                <div id=\"githubook-search\">\r\n                    <label htmlFor=\"q\">\r\n                        <div id=\"q-icon\"></div>\r\n                        <input\r\n                            id=\"q\"\r\n                            type=\"search\"\r\n                            placeholder=\"github Id\"\r\n                            onKeyPress={async (e: any) => {\r\n                                if (e.key === \"Enter\" && e.target.value !== \"\") {\r\n                                    localStorage.setItem(\"token\", e.target.value);\r\n                                    window.location.reload();\r\n                                }\r\n                            }}\r\n                        ></input>\r\n                    </label>\r\n                </div>\r\n                */}\r\n            </div>\r\n            <div id=\"githubook-nav-main\">\r\n                <ul\r\n                    onClick={(e: any) => {\r\n                        if (e.target.tagName !== \"UL\")\r\n                            document.getElementsByClassName(\"active\")[0].classList.toggle(\"active\");\r\n                        if (e.target.tagName === \"IMG\") {\r\n                            props.handleEventType(e.target.parentElement.id);\r\n                            e.target.parentElement.classList.toggle(\"active\");\r\n                        }\r\n                        if (e.target.tagName === \"LI\") {\r\n                            props.handleEventType(e.target.id);\r\n                            e.target.classList.toggle(\"active\");\r\n                        }\r\n                    }}\r\n                    id=\"githubook-nav-main-ul\"\r\n                    className=\"githubook-nav-main-ul\"\r\n                >\r\n                    <li id=\"All\" className=\"githubook-card-date active\">\r\n                        <img src=\"https://img.icons8.com/android/24/000000/home.png\" />\r\n                        <span className=\"githubook-card-date-tooltips\">{\"All Events\"}</span>\r\n                    </li>\r\n                    <li id=\"PushEvent\" className=\"githubook-card-date\">\r\n                        <img src=\"https://img.icons8.com/ios/40/000000/commit-git.png\" />\r\n                        <span className=\"githubook-card-date-tooltips\">{\"Commits\"}</span>\r\n                    </li>\r\n                    <li id=\"PullRequestEvent\" className=\"githubook-card-date\">\r\n                        <img src=\"https://img.icons8.com/ios/24/000000/pull-request.png\" />\r\n                        <span className=\"githubook-card-date-tooltips\">{\"Pull Requests\"}</span>\r\n                    </li>\r\n                    <li id=\"IssuesEvent\" className=\"githubook-card-date\">\r\n                        <img src=\"https://img.icons8.com/ios/100/000000/exclamation-mark.png\" />\r\n                        <span className=\"githubook-card-date-tooltips\">{\"Issues\"}</span>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            <div id=\"githubook-nav-side-r\">\r\n                <img\r\n                    className=\"mr-2\"\r\n                    src={props.data.avatar_url}\r\n                    style={{ width: \"30px\", height: \"30px\", borderRadius: \"50%\" }}\r\n                ></img>\r\n                <span className=\"mr-4\">{props.data.login}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Nav;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport getGithubInfo, { GithubProfile } from \"../../api/getGithubInfo\";\r\nimport { getGithubFollower, getGithubFollowing, GithubFollow } from \"../../api/getGithubFollow\";\r\nimport { getGithubEvent, GithubEvent } from \"../../api/getGithubEvent\";\r\nimport printDate from \"../../api/printDate\";\r\n\r\nimport Nav from \"../Nav\";\r\nimport \"./githubook.scss\";\r\n\r\nconst menubox = (image: string, text: string, imgStyle: string) => {\r\n    return (\r\n        <div className=\"githubook-menubox\">\r\n            <div className=\"githubook-menubox-icon\">\r\n                <img className={imgStyle} src={image}></img>\r\n            </div>\r\n            <div className=\"githubook-menubox-text\">\r\n                <span>{text}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst infoBox = (avatar: string, name: string) => {\r\n    return (\r\n        <div className=\"githubook-card-info-box\">\r\n            <div>\r\n                <img src={avatar} style={{ height: \"60px\", width: \"60px\" }}></img>\r\n                {name}\r\n            </div>\r\n            <div className=\"mt-3\">\r\n                <a href={\"https://github.com/\" + name}>깃허브 - https://github.com/{name}</a>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst card = (e: any, idx: number) => {\r\n    let dateA = printDate(e.created_at),\r\n        dateB = [dateA[0][1], dateA[0][2], dateA[0][4], dateA[0][5], dateA[0][6], dateA[0][7]];\r\n\r\n    console.log(e.payload.issue);\r\n    return (\r\n        <div key={idx} className=\"githubook-card\">\r\n            <div className=\"githubook-card-title\">\r\n                <div>\r\n                    <span className=\"githubook-card-info\">\r\n                        <img\r\n                            src={e.actor.avatar_url}\r\n                            style={{ height: \"40px\", width: \"40px\" }}\r\n                        ></img>\r\n                        {infoBox(e.actor.avatar_url, e.actor.login)}\r\n                    </span>\r\n                </div>\r\n                <div>\r\n                    <div className=\"mb-0\">\r\n                        <span className=\"githubook-card-info\">\r\n                            {e.actor.login} &gt;&nbsp; {infoBox(e.actor.avatar_url, e.actor.login)}\r\n                        </span>\r\n\r\n                        <a href={\"https://github.com/\" + e.repo.name}>{e.repo.name}</a>\r\n                    </div>\r\n                    <div className=\"mb-0 githubook-card-date\">\r\n                        {dateA[1] ? dateA[1] : dateB}\r\n                        <span className=\"githubook-card-date-tooltips\">{dateA[0]}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"githubook-card-main\">\r\n                - {e.type}\r\n                <hr />\r\n                {e.type === \"PushEvent\" && (\r\n                    //<h5>{JSON.stringify(e.payload.commits[0].message).split('\"')[1]}</h5>\r\n                    <h5>{e.payload.commits[0].message}</h5>\r\n                )}\r\n                {e.type === \"IssuesEvent\" && (\r\n                    <h5>{JSON.stringify(e.payload.issue.body).split('\"')[1].split(\"\\\\r\\\\n\")}</h5>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Githubook = () => {\r\n    const auth = useSelector((state: any) => state.auth);\r\n\r\n    const [sideToggle, setSideToggle] = useState(false);\r\n    const [data, setData] = useState<GithubProfile | null>();\r\n    const [following, setFollowing] = useState<GithubFollow[]>([]);\r\n    const [events, setEvents] = useState<GithubEvent[]>([]);\r\n    const [eventType, setEventType] = useState(\"All\");\r\n\r\n    useEffect(() => {\r\n        getGithubInfo(auth.user).then((info) => {\r\n            let eventList: any = [],\r\n                idx = 0;\r\n\r\n            setData(info.data);\r\n\r\n            getGithubEvent(info.data.login, auth.user).then((e) => {\r\n                eventList.push(...e.data);\r\n            });\r\n\r\n            getGithubFollowing(auth.user).then((following) => {\r\n                setFollowing(following.data);\r\n\r\n                let getFollowingEvent = () => {\r\n                    return new Promise((res, rej) => {\r\n                        following.data.forEach((f: any, i: number) => {\r\n                            getGithubEvent(f.login, auth.user).then((event) => {\r\n                                eventList.push(...event.data);\r\n                                idx += 1;\r\n                                if (idx === following.data.length) res(eventList);\r\n                            });\r\n                        });\r\n                    });\r\n                };\r\n\r\n                getFollowingEvent().then((el: any) => {\r\n                    el.sort((a: any, b: any) => {\r\n                        var foo = new Date(a.created_at),\r\n                            bar = new Date(b.created_at);\r\n                        return foo > bar ? -1 : 1;\r\n                    });\r\n                    setEvents(el);\r\n                });\r\n            });\r\n        });\r\n    }, []);\r\n\r\n    const handleEventType = (v: any) => {\r\n        setEventType(v);\r\n    };\r\n\r\n    return (\r\n        <div id=\"githubook-container\">\r\n            {data && (\r\n                <>\r\n                    <Nav data={data} handleEventType={handleEventType} />\r\n                    <div id=\"githubook-body\">\r\n                        <div id=\"githubook-side-l\">\r\n                            {[\r\n                                [data.avatar_url, data.login, \"circle\", \"/githubook\"],\r\n                                [\r\n                                    \"https://img.icons8.com/fluent/48/000000/github.png\",\r\n                                    \"깃허브\",\r\n                                    \"square\",\r\n                                    data.html_url,\r\n                                ],\r\n                                [\r\n                                    \"https://img.icons8.com/dotty/50/000000/repository.png\",\r\n                                    \"저장소\",\r\n                                    \"square\",\r\n                                    data.repos_url,\r\n                                ],\r\n                                [\r\n                                    \"https://img.icons8.com/ios-glyphs/50/000000/pet-commands-follow.png\",\r\n                                    \"팔로워\",\r\n                                    \"square\",\r\n                                    data.followers_url,\r\n                                ],\r\n                                [\r\n                                    \"https://img.icons8.com/doodle/48/000000/follow--v1.png\",\r\n                                    \"팔로잉\",\r\n                                    \"square\",\r\n                                    data.following_url,\r\n                                ],\r\n                            ].map((md: any, i) => (\r\n                                <a key={i} href={md[3]}>\r\n                                    {menubox(md[0], md[1], md[2])}\r\n                                </a>\r\n                            ))}\r\n                            {sideToggle ? (\r\n                                <>\r\n                                    {[\r\n                                        [\r\n                                            \"https://img.icons8.com/bubbles/48/000000/list.png\",\r\n                                            \"Gist\",\r\n                                            \"square\",\r\n                                            data.gists_url,\r\n                                        ],\r\n                                        [\r\n                                            \"https://img.icons8.com/cotton/64/000000/star.png\",\r\n                                            \"Star\",\r\n                                            \"square\",\r\n                                            data.starred_url,\r\n                                        ],\r\n                                    ].map((md: any) => (\r\n                                        <a href={md[3]}>{menubox(md[0], md[1], md[2])}</a>\r\n                                    ))}\r\n                                    <div onClick={() => setSideToggle(sideToggle ? false : true)}>\r\n                                        {menubox(\r\n                                            \"https://img.icons8.com/windows/64/000000/minus.png\",\r\n                                            \"간략하게 보기\",\r\n                                            \"square\"\r\n                                        )}\r\n                                    </div>\r\n                                </>\r\n                            ) : (\r\n                                <>\r\n                                    <div onClick={() => setSideToggle(sideToggle ? false : true)}>\r\n                                        {menubox(\r\n                                            \"https://img.icons8.com/windows/48/000000/plus.png\",\r\n                                            \"더보기\",\r\n                                            \"square\"\r\n                                        )}\r\n                                    </div>\r\n                                </>\r\n                            )}\r\n                        </div>\r\n\r\n                        <div id=\"githubook-main\">\r\n                            {eventType === \"All\"\r\n                                ? events.map((e, idx) => card(e, idx))\r\n                                : events.map((e, idx) => e.type === eventType && card(e, idx))}\r\n                        </div>\r\n                        <div id=\"githubook-side-r\">\r\n                            <div className=\"madeinfo\">\r\n                                <h1>Made By</h1>\r\n                                <div className=\"madeinfo-content\">\r\n                                    <a href=\"https://github.com/hyeonjaae/githubook\">\r\n                                        {menubox(\r\n                                            \"https://avatars0.githubusercontent.com/u/34333474?v=4\",\r\n                                            \"HyeonJaae\",\r\n                                            \"circle\"\r\n                                        )}\r\n                                    </a>\r\n                                </div>\r\n                                <hr />\r\n                            </div>\r\n                            <div className=\"following\">\r\n                                <h1>Following</h1>\r\n                                <div className=\"following-content\">\r\n                                    {following.map((f, i) => (\r\n                                        <div key={i} className=\"\">\r\n                                            <a>{menubox(f.avatar_url, f.login, \"circle\")}</a>\r\n                                            {infoBox(f.avatar_url, f.login)}\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Githubook;\r\n","import axios from \"axios\";\r\n\r\nexport const getGithubFollower = (username: string| null) => {\r\n    return axios.get<GithubFollow[]>(\r\n        `https://api.github.com/users/${username}/followers`\r\n    );\r\n}\r\n\r\nexport const getGithubFollowing = (username: string| null) => {\r\n    return axios.get(`https://api.github.com/user/following`, {\r\n        headers: {\r\n          Authorization: `token ${username}`,\r\n        },\r\n      })\r\n    /*return axios.get<GithubFollow[]>(\r\n        `https://api.github.com/users/${username}/following`\r\n    );*/\r\n}\r\n\r\nexport interface GithubFollow {\r\n    login: string,\r\n    id: number,\r\n    node_id: string,\r\n    avatar_url: string,\r\n    gravatar_id: string,\r\n    url: string,\r\n    html_url: string,\r\n    followers_url: string,\r\n    following_url: string,\r\n    gists_url: string,\r\n    starred_url: string,\r\n    subscriptions_url: string,\r\n    organizations_url: string,\r\n    repos_url: string,\r\n    events_url: string,\r\n    received_events_url: string,\r\n    type: string,\r\n    site_admin: false\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\n\r\nimport { setCurrentUser } from \"../../actions/authAction\";\r\nimport Githubook from \"../Githubook\";\r\nimport \"./home.scss\";\r\n\r\nconst Home = (props: any) => {\r\n    const dispatch = useDispatch();\r\n    const auth = useSelector((state: any) => state.auth);\r\n\r\n    useEffect(() => {\r\n        let access_token = window.location.search.split(\"=\")[1];\r\n        if (access_token) {\r\n            axios\r\n                .post(\r\n                    \"https://cors-anywhere.herokuapp.com/https://github.com/login/oauth/access_token\",\r\n                    {\r\n                        code: window.location.search.split(\"=\")[1],\r\n                        client_id: \"504c566c0230964f360d\",\r\n                        client_secret: \"e6821d09a158291b5704634c2f49052d50a6e278\",\r\n                    },\r\n                    {\r\n                        headers: {\r\n                            accept: \"application/json\",\r\n                        },\r\n                    }\r\n                )\r\n                .then((res) => {\r\n                    console.log(res);\r\n                    dispatch(setCurrentUser(res.data.access_token));\r\n                    localStorage.setItem(\"token\", res.data.access_token);\r\n                    props.history.push(\"/\");\r\n                })\r\n                .catch((err) => console.log(err));\r\n        }\r\n    }, []);\r\n    return (\r\n        <>\r\n            {auth.user ? (\r\n                <Githubook />\r\n            ) : (\r\n                <div id=\"home-container\">\r\n                    <a href=\"https://github.com/login/oauth/authorize?client_id=504c566c0230964f360d&redirect_uri=http://localhost:3000\">\r\n                        dev\r\n                    </a>\r\n                    <a href=\"https://github.com/login/oauth/authorize?client_id=504c566c0230964f360d&redirect_uri=https://hyeonjaae.github.io/githubook\">\r\n                        <img\r\n                            src=\"https://d2eip9sf3oo6c2.cloudfront.net/tags/images/000/000/276/square_480/github_logo.png\"\r\n                            style={{ width: \"40px\", height: \"40px\" }}\r\n                        ></img>\r\n                        <img\r\n                            src=\"https://en.followersnet.com/wp-content/uploads/2016/02/Facebook-1.png\"\r\n                            style={{ width: \"60px\", height: \"60px\" }}\r\n                        ></img>\r\n                    </a>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setCurrentUser } from \"../../actions/authAction\";\r\nimport axios from \"axios\";\r\n\r\nconst Login = (props: any) => {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .post(\r\n                \"https://cors-anywhere.herokuapp.com/https://github.com/login/oauth/access_token\",\r\n                {\r\n                    code: window.location.search.split(\"=\")[1],\r\n                    client_id: \"504c566c0230964f360d\",\r\n                    client_secret: \"e6821d09a158291b5704634c2f49052d50a6e278\",\r\n                },\r\n                {\r\n                    headers: {\r\n                        accept: \"application/json\",\r\n                    },\r\n                }\r\n            )\r\n            .then((res) => {\r\n                console.log(res);\r\n                dispatch(setCurrentUser(res.data.access_token));\r\n                props.history.push(\"/\");\r\n            })\r\n            .catch((err) => console.log(err));\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"text-center\">\r\n            <div className=\"spinner-border\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\nimport { Route, BrowserRouter as Router } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { setCurrentUser } from \"./actions/authAction\";\nimport Home from \"./Components/Home\";\nimport Login from \"./Components/Login\";\n\nconst App = () => {\n    const dispatch = useDispatch();\n    dispatch(setCurrentUser(localStorage.getItem(\"token\")));\n    return (\n        <Router basename={process.env.PUBLIC_URL}>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/login\" component={Login} />\n        </Router>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { AuthTypes, SET_USER } from \"../actions/authAction\";\r\n\r\ntype AuthState = {\r\n    user: object;\r\n};\r\n\r\nconst initialState: AuthState = {\r\n    user: {},\r\n};\r\n\r\nexport default (state = initialState, action: AuthTypes) => {\r\n    switch (action.type) {\r\n        case SET_USER:\r\n            return {\r\n                user: action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","const initialState = {};\r\n\r\nexport default function (state = initialState, action : any) {\r\n    switch (action.type) {\r\n        case \"GET_ERRORS\":\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","export type CountTypes =\r\n    | ReturnType<typeof increase>\r\n    | ReturnType<typeof decrease>\r\n    | ReturnType<typeof increaseBy>;\r\n\r\nexport const INCREASE = \"counter/INCREASE\" as const;\r\nexport const DECREASE = \"counter/DECREASE\" as const;\r\nexport const INCREASE_BY = \"counter/INCREASE_BY\" as const;\r\n\r\nexport const increase = () => ({ type: INCREASE });\r\nexport const decrease = () => ({ type: DECREASE });\r\nexport const increaseBy = (diff: number) => ({\r\n    type: INCREASE_BY,\r\n    payload: diff,\r\n});\r\n","import { CountTypes, INCREASE, DECREASE, INCREASE_BY } from \"../actions/counterAction\";\r\n\r\ntype CounterState = {\r\n    count: number;\r\n};\r\n\r\nconst initialState: CounterState = {\r\n    count: 0,\r\n};\r\n\r\nexport default (state: CounterState = initialState, action: CountTypes) => {\r\n    switch (action.type) {\r\n        case INCREASE:\r\n            return {\r\n                count: state.count + 1,\r\n            };\r\n        case DECREASE:\r\n            return {\r\n                count: state.count - 1,\r\n            };\r\n        case INCREASE_BY:\r\n            return {\r\n                count: state.count + action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport authReducer from \"../reducers/authReducers\";\r\nimport errorReducer from \"../reducers/errorReducers\";\r\nimport countReducer from \"./counterReducers\";\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    counter: countReducer,\r\n    errors: errorReducer,\r\n});\r\nexport default rootReducer;\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n","const loggerMiddleware = (store:any) => (next:any) => (action:any) => {\r\n    \r\n    console.log(\"current state\", store.getState());\r\n    console.log('action', action);\r\n\r\n    //액션을 다음 미들웨어, 혹은 리듀서로 전달\r\n    const result = next(action);\r\n    \r\n    console.log(\"next state\", store.getState());\r\n    console.log('\\n');\r\n\r\n    return result;\r\n}\r\n\r\nexport default loggerMiddleware;","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\nimport loggerMiddleware from \"./lib/loggerMiddleware\";\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk, loggerMiddleware];\r\n\r\nconst store = createStore(rootReducer, initialState, compose(applyMiddleware(...middleware)));\r\n\r\nexport default store;\r\n\r\n/*\r\ncreateStore(reducer, [preloadedState], [enhancer])\r\ncompose to enhance a store with applyMiddleware and a few developer tools from the redux-devtools package.\r\n*/\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById(\"root\") as HTMLElement\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}